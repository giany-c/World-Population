<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.1014.1036                               -->
<workbook original-version='18.1' source-build='2021.2.4 (20212.21.1014.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Standard Deviations' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <members>
          <member value='1' />
          <member value='2' />
        </members>
      </column>
    </datasource>
    <datasource caption='Year (World Population)' inline='true' name='federated.16xwp760czvp1212infh50jpqcpw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Population' name='excel-direct.1ky554u00gpln312x2z3j1w2jyy7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Documents/1.KAMPUS/5 Semester/2. DatVis/PROJECT/DATASET/World Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Area' table='[Area$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='Country Code' ordinal='2' />
            <column datatype='real' name='Area (sq.km)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Year' table='[Year$]' type='table'>
            <columns gridOrigin='A1:J2191:no:A1:J2191:0' header='yes' outcome='2'>
              <column datatype='string' name='Continent' ordinal='0' />
              <column datatype='string' name='Country Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='integer' name='Population' ordinal='3' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
              <column datatype='real' name='Death' ordinal='5' />
              <column datatype='real' name='Birth' ordinal='6' />
              <column datatype='real' name='Net Percapita' ordinal='7' />
              <column datatype='real' name='GNI Percapita' ordinal='8' />
              <column datatype='real' name='Currency Exc.' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Area' table='[Area$]' type='table'>
            <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
              <column datatype='string' name='Continent' ordinal='0' />
              <column datatype='string' name='Country Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='real' name='Area (sq.km)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Country' table='[Country$]' type='table'>
            <columns gridOrigin='A1:N220:no:A1:N220:0' header='yes' outcome='6'>
              <column datatype='string' name='Continent' ordinal='0' />
              <column datatype='string' name='Country Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='real' name='Area (sq.km)' ordinal='3' />
              <column datatype='integer' name='2011' ordinal='4' />
              <column datatype='integer' name='2012' ordinal='5' />
              <column datatype='integer' name='2013' ordinal='6' />
              <column datatype='integer' name='2014' ordinal='7' />
              <column datatype='integer' name='2015' ordinal='8' />
              <column datatype='integer' name='2016' ordinal='9' />
              <column datatype='integer' name='2017' ordinal='10' />
              <column datatype='integer' name='2018' ordinal='11' />
              <column datatype='integer' name='2019' ordinal='12' />
              <column datatype='integer' name='2020' ordinal='13' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2011]' value='[Country].[2011]' />
          <map key='[2012]' value='[Country].[2012]' />
          <map key='[2013]' value='[Country].[2013]' />
          <map key='[2014]' value='[Country].[2014]' />
          <map key='[2015]' value='[Country].[2015]' />
          <map key='[2016]' value='[Country].[2016]' />
          <map key='[2017]' value='[Country].[2017]' />
          <map key='[2018]' value='[Country].[2018]' />
          <map key='[2019]' value='[Country].[2019]' />
          <map key='[2020]' value='[Country].[2020]' />
          <map key='[Area (sq.km) (Country)]' value='[Country].[Area (sq.km)]' />
          <map key='[Area (sq.km)]' value='[Area].[Area (sq.km)]' />
          <map key='[Birth]' value='[Year].[Birth]' />
          <map key='[Continent (Area)]' value='[Area].[Continent]' />
          <map key='[Continent (Country)]' value='[Country].[Continent]' />
          <map key='[Continent]' value='[Year].[Continent]' />
          <map key='[Country Code (Area)]' value='[Area].[Country Code]' />
          <map key='[Country Code (Country)]' value='[Country].[Country Code]' />
          <map key='[Country Code]' value='[Year].[Country Code]' />
          <map key='[Country Name (Area)]' value='[Area].[Country Name]' />
          <map key='[Country Name (Country)]' value='[Country].[Country Name]' />
          <map key='[Country Name]' value='[Year].[Country Name]' />
          <map key='[Currency Exc.]' value='[Year].[Currency Exc.]' />
          <map key='[Death]' value='[Year].[Death]' />
          <map key='[GNI Percapita]' value='[Year].[GNI Percapita]' />
          <map key='[Net Percapita]' value='[Year].[Net Percapita]' />
          <map key='[Population]' value='[Year].[Population]' />
          <map key='[Year]' value='[Year].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Year]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J2191:no:A1:J2191:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Area]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N220:no:A1:N220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Death</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Percapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net Percapita]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Net Percapita</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI Percapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GNI Percapita]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>GNI Percapita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency Exc.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Currency Exc.]</local-name>
            <parent-name>[Year]</parent-name>
            <remote-alias>Currency Exc.</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Year_A78F9484399749848408FC7420089F50]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent (Area)]</local-name>
            <parent-name>[Area]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Area_3FFC9F741E31401DA684314A1823087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name (Area)]</local-name>
            <parent-name>[Area]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Area_3FFC9F741E31401DA684314A1823087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code (Area)]</local-name>
            <parent-name>[Area]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Area_3FFC9F741E31401DA684314A1823087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area (sq.km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Area (sq.km)]</local-name>
            <parent-name>[Area]</parent-name>
            <remote-alias>Area (sq.km)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Area_3FFC9F741E31401DA684314A1823087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent (Country)]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name (Country)]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code (Country)]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area (sq.km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Area (sq.km) (Country)]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Area (sq.km)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_E196B724926145648150060D75132E06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[attr:Fixed Sub-Total Populasi (copy)_1338976507638620167:qk]&quot;' value='Avarage GNI' />
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:6]&quot;' value='Avg. Population' />
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:7]&quot;' value='Avg. GNI (Include)' />
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[pcto:sum:Calculation_1338976507619827712:qk:5]&quot;' value='Percentage' />
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398456938497:qk]&quot;' value='Birth' />
          <alias key='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457016323:qk]&quot;' value='Death' />
        </aliases>
      </column>
      <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
      <column caption='String Calculation' datatype='string' name='[Calculation_1143351398455455744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='UPPER([Country Name])' />
      </column>
      <column caption='Fixed Sub-Total Populasi' datatype='integer' name='[Calculation_1143351398486978570]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Continent]: SUM([Population])}' />
      </column>
      <column caption='Percentage of County Population' datatype='real' name='[Calculation_1338976507619827712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Population]/[Calculation_1143351398486978570]' />
      </column>
      <column caption='Population Growth' datatype='real' name='[Calculation_1338976507629178883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(ZN([Birth])-ZN([Death]))' />
      </column>
      <column caption='Count Country Category' datatype='real' name='[Calculation_1338976507639382024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Country Name (group)])/10' />
      </column>
      <column caption='GNI Under AVG' datatype='string' name='[Calculation_1338976507649908746]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM(ZN([GNI Percapita]))&lt; ATTR([Fixed Sub-Total Populasi (copy)_1338976507638620167]) THEN &apos;Below Avarage&apos; ELSE &apos;Above Avarage&apos; END' />
      </column>
      <column caption='Include Country' datatype='real' name='[Calculation_1338976507656069134]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({INCLUDE [Country Name (group)], [Country Name]: SUM([GNI Percapita])})' />
      </column>
      <column caption='Lower Bound' datatype='real' name='[Calculation_591660444979019776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Currency Exc.]))- (WINDOW_STDEV(SUM([Currency Exc.]))* [Parameters].[Parameter 1])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Outliers' datatype='boolean' name='[Calculation_591660444981534722]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Currency Exc.]) &lt; [Calculation_591660444979019776] OR SUM([Currency Exc.]) &gt; [Lower Bound (copy)_591660444981313537]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Over Population' datatype='integer' name='[Calculation_985443935853862912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([Population]/[Area (sq.km)])' />
      </column>
      <column caption='Color Death&gt;Birth' datatype='string' name='[Calculation_985443935893602305]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Death]) &gt; SUM([Birth]) THEN &quot;RED&quot; ELSE &quot;GREEN&quot; END' />
      </column>
      <column caption='Color Population' datatype='string' name='[Color Death&gt;Birth (copy)_1338976507622420482]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Calculation_1338976507619827712]) &gt; 0.05 THEN &quot;BLUE&quot; ELSE &quot;RED&quot; END' />
      </column>
      <column datatype='string' name='[Continent (Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column caption='Fixed Count Country' datatype='integer' name='[Count Country Category (copy)_1338976507760070672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT({ FIXED [Continent] : COUNT([Country Name])/10})' />
      </column>
      <column datatype='string' name='[Country Code (Area)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code (Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name (Area)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name (Country)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Developed Country&quot;'>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Bahamas, The&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central Europe and the Baltics&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hong Kong SAR, China&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Korea, Rep.&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovak Republic&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;St. Kitts and Nevis&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uruguay&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Currency Exc.]' role='measure' type='quantitative' />
      <column datatype='real' name='[Death]' role='measure' type='quantitative' />
      <column aggregation='Attribute' caption='Exclude Avarage GNI' datatype='real' name='[Fixed Sub-Total Populasi (copy)_1338976507638620167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [Country Name]: AVG([GNI Percapita])}' />
      </column>
      <column datatype='real' name='[GNI Percapita]' role='measure' type='quantitative' />
      <column caption='Upper Bound ' datatype='real' name='[Lower Bound (copy)_591660444981313537]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Currency Exc.]))+ (WINDOW_STDEV(SUM([Currency Exc.]))* [Parameters].[Parameter 1])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Area' datatype='table' name='[__tableau_internal_object_id__].[Area_3FFC9F741E31401DA684314A1823087F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Country' datatype='table' name='[__tableau_internal_object_id__].[Country_E196B724926145648150060D75132E06]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Year' datatype='table' name='[__tableau_internal_object_id__].[Year_A78F9484399749848408FC7420089F50]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1143351398486978570]' derivation='Attribute' name='[attr:Calculation_1143351398486978570:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fixed Sub-Total Populasi (copy)_1338976507638620167]' derivation='Attribute' name='[attr:Fixed Sub-Total Populasi (copy)_1338976507638620167:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GNI Percapita]' derivation='Avg' name='[avg:GNI Percapita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[cum:sum:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[cum:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1338976507656069134]' derivation='User' name='[cum:usr:Calculation_1338976507656069134:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_1338976507656069134]' derivation='User' name='[cum:usr:Calculation_1338976507656069134:qk:7]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[diff:cum:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[diff:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' />
          <order field='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country Name Set]' derivation='InOut' name='[io:Country Name Set:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Not Over Populated' />
          <alias key='true' value='Over Populated' />
        </aliases>
      </column-instance>
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Population]' derivation='Sum' name='[pcto:cum:sum:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[pcto:cum:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1338976507619827712]' derivation='Sum' name='[pcto:sum:Calculation_1338976507619827712:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1338976507619827712]' derivation='Sum' name='[pcto:sum:Calculation_1338976507619827712:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Birth]' derivation='Sum' name='[sum:Birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Currency Exc.]' derivation='Sum' name='[sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death]' derivation='Sum' name='[sum:Death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GNI Percapita]' derivation='Sum' name='[sum:GNI Percapita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GNI Percapita]' derivation='Sum' name='[sum:GNI Percapita:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Calculation_1143351398486978570]' derivation='User' name='[usr:Calculation_1143351398486978570:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1338976507649908746]' derivation='User' name='[usr:Calculation_1338976507649908746:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_591660444981534722]' derivation='User' name='[usr:Calculation_591660444981534722:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.16xwp760czvp1212infh50jpqcpw].[Calculation_591660444979019776]' ordering-type='Rows' />
        <table-calc field='[federated.16xwp760czvp1212infh50jpqcpw].[Lower Bound (copy)_591660444981313537]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_985443935893602305]' derivation='User' name='[usr:Calculation_985443935893602305:nk]' pivot='key' type='nominal' />
      <column-instance column='[Color Death&gt;Birth (copy)_1338976507622420482]' derivation='User' name='[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]' pivot='key' type='nominal' />
      <group caption='Action (Continent)' hidden='true' name='[Action (Continent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
        </groupfilter>
      </group>
      <group caption='Action (Continent,Country Category)' hidden='true' name='[Action (Continent,Country Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
          <groupfilter function='level-members' level='[Country Name (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Continent,Country Name)' hidden='true' name='[Action (Continent,Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Continent Set' name='[Continent Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='level-members' level='[Continent]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </group>
      <group caption='Top 10 Population' name='[Country Name Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country Name]' member='&quot;Africa Eastern and Southern&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Africa Western and Central&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Arab World&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group caption='Top 10 Over Populated' name='[Country Name Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country Name]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Gibraltar&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Hong Kong SAR, China&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Macao SAR, China&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Maldives&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Malta&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Sint Maarten (Dutch part)&quot;' />
        </groupfilter>
      </group>
      <group caption='Urban Area' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Continent]' member='&quot;Afrika&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country Name]' member='&quot;Africa Eastern and Southern&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Africa Western and Central&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Nigeria&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Continent]' member='&quot;Amerika&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country Name]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;United States&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Continent]' member='&quot;Asia&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country Name]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Indonesia&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Continent]' member='&quot;Australia&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country Name]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Papua New Guinea&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Continent]' member='&quot;Eropa&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country Name]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[Country Name]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Tooltip (Continent,Country Category,Country Name)' hidden='true' name='[Tooltip (Continent,Country Category,Country Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
          <groupfilter function='level-members' level='[Country Name (group)]' />
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Continent,Country Name)' hidden='true' name='[Tooltip (Continent,Country Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country Category,Country Name)' hidden='true' name='[Tooltip (Country Category,Country Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name (group)]' />
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country Name)' hidden='true' name='[Tooltip (Country Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (YEAR(Population 2020),Country Category,Country Name)' hidden='true' name='[Tooltip (YEAR(Population 2020),Country Category,Country Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Calculation_985443935961640966:ok]' />
          <groupfilter function='level-members' level='[Country Name (group)]' />
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Continent'>
          <field>[Continent]</field>
          <field>[Country Name]</field>
          <field>[Country Code]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Afrika&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eropa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amerika&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[fVal:sum:Birth:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[fVal:sum:Currency Exc.:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[fVal:sum:Death:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='shape' field='[none:AdhocCluster:1:ok]' type='shape'>
            <map to='Ratings/0.png'>
              <bucket>1</bucket>
            </map>
            <map to='Ratings/4.png'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1338976507649908746:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Above Avarage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GREEN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Below Avarage&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Country Name Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_985443935893602305:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;GREEN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Developed Country&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Developing Country&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antigua and Barbuda, Australia, Austria and 47 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_591660444981534722:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#bab0ac'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[pcto:sum:Calculation_1338976507619827712:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398456938497:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:sum:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[diff:cum:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[diff:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_985443935960293379:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_985443935960768517:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457118724:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Percapita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398456983554:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457016323:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[avg:GNI Percapita:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1338976507649302537:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[attr:Calculation_1143351398486978570:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1143351398486978570:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Standard Deviations' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{ae9bcda5-4b2e-4f83-8327-2d858dd71a4f}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]' />
            <field name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Area' id='Area_3FFC9F741E31401DA684314A1823087F'>
            <properties context=''>
              <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Area' table='[Area$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='string' name='Country Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='real' name='Area (sq.km)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Country' id='Country_E196B724926145648150060D75132E06'>
            <properties context=''>
              <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Country' table='[Country$]' type='table'>
                <columns gridOrigin='A1:N220:no:A1:N220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='string' name='Country Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='real' name='Area (sq.km)' ordinal='3' />
                  <column datatype='integer' name='2011' ordinal='4' />
                  <column datatype='integer' name='2012' ordinal='5' />
                  <column datatype='integer' name='2013' ordinal='6' />
                  <column datatype='integer' name='2014' ordinal='7' />
                  <column datatype='integer' name='2015' ordinal='8' />
                  <column datatype='integer' name='2016' ordinal='9' />
                  <column datatype='integer' name='2017' ordinal='10' />
                  <column datatype='integer' name='2018' ordinal='11' />
                  <column datatype='integer' name='2019' ordinal='12' />
                  <column datatype='integer' name='2020' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Year' id='Year_A78F9484399749848408FC7420089F50'>
            <properties context=''>
              <relation connection='excel-direct.1ky554u00gpln312x2z3j1w2jyy7' name='Year' table='[Year$]' type='table'>
                <columns gridOrigin='A1:J2191:no:A1:J2191:0' header='yes' outcome='2'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='string' name='Country Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='integer' name='Population' ordinal='3' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='4' />
                  <column datatype='real' name='Death' ordinal='5' />
                  <column datatype='real' name='Birth' ordinal='6' />
                  <column datatype='real' name='Net Percapita' ordinal='7' />
                  <column datatype='real' name='GNI Percapita' ordinal='8' />
                  <column datatype='real' name='Currency Exc.' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country Code]' />
              <expression op='[Country Code (Area)]' />
            </expression>
            <first-end-point object-id='Year_A78F9484399749848408FC7420089F50' />
            <second-end-point object-id='Area_3FFC9F741E31401DA684314A1823087F' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Continent]' />
                <expression op='[Continent (Country)]' />
              </expression>
              <expression op='='>
                <expression op='[Country Code]' />
                <expression op='[Country Code (Country)]' />
              </expression>
              <expression op='='>
                <expression op='[Country Name]' />
                <expression op='[Country Name (Country)]' />
              </expression>
            </expression>
            <first-end-point object-id='Year_A78F9484399749848408FC7420089F50' />
            <second-end-point object-id='Country_E196B724926145648150060D75132E06' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action6_D68AD435CE164A719296C585F62B3A8A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D2' type='sheet' worksheet='2.4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D2' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action7_432686EBAF69495DA4AACA7422ED5BEA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D4' type='sheet' worksheet='3.2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D4' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action8_D40837E1F1D748D6BD19992B50471A5A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='D5' type='sheet' worksheet='3.3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='D5' />
      </command>
    </action>
    <edit-group-action caption='Continent Set' name='[Action1_87345BFB0F624ADE9889692DB8766F68]'>
      <activation type='on-select' />
      <source dashboard='D2' type='sheet' worksheet='2.4' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Set1' name='[Action2_336F80971DE942239F590E677F595973]'>
      <activation type='on-select' />
      <source dashboard='D2' type='sheet' worksheet='2.4' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Set2' name='[Action3_FC039809ADBF48D18D03BB737C23F591]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='2.4' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Set3' name='[Action4_0B819DFB970247A48392CFBF55F19CAC]'>
      <activation type='on-select' />
      <source dashboard='D2' type='sheet' worksheet='2.4' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Set4' name='[Action5_A29F9A80099144C2828D63DFB9054731]'>
      <activation type='on-select' />
      <source dashboard='D2' type='sheet' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='1.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Multiple Layer Map &#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='integer' name='[2020]' role='measure' type='quantitative' />
            <column datatype='real' name='[Area (sq.km)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020]' derivation='Sum' name='[sum:2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area (sq.km)]' derivation='Sum' name='[sum:Area (sq.km):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[Longitude (generated)]' field-type='quantitative' max='25317535.221677255' min='-25441542.146379042' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' field-type='quantitative' max='20843938.68589285' min='-6902481.9128311425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' field-type='quantitative' fold='true' max='20843938.68589285' min='-6902481.9128311425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16xwp760czvp1212infh50jpqcpw].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area (sq.km):&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;</run>
                <run bold='true'><![CDATA[Sheet name="1.1.1" maxwidth="300" maxheight="300" filter="<All Fields>"]]></run>
                <run bold='true'>&gt;</run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]' />
              <geometry column='[federated.16xwp760czvp1212infh50jpqcpw].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]> [<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>]]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' italic='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#666666'><![CDATA[Land Area	: <[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]> km²]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#555555' italic='true'>Birth vs. Death Graphic</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1'><![CDATA[<Sheet name="1.1.1" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run fontalignment='1'>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]' />
              <size column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]> [<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>]]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'><![CDATA[Population	: <[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]> soul]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9670165777206421' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)] + [federated.16xwp760czvp1212infh50jpqcpw].[Latitude (generated)])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B847CC17-6296-4E6F-A6AD-9577979C7073}' />
    </worksheet>
    <worksheet name='1.1.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Death]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Birth]' derivation='Sum' name='[sum:Birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death]' derivation='Sum' name='[sum:Death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Tooltip (Continent,Country Category,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - tooltip]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Continent]' />
              <groupfilter function='level-members' level='[Country Name (group)]' />
              <groupfilter function='level-members' level='[Country Name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Tooltip (Continent,Country Category,Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]' value='59' />
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]' value='59' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk] + [federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{33C1D890-CD90-4A2A-8E7B-771A50039854}' />
    </worksheet>
    <worksheet name='1.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='24'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>]]></run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Death]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Birth]' derivation='Sum' name='[sum:Birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death]' derivation='Sum' name='[sum:Death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Eropa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]' field-type='quantitative' fold='true' range-type='uniform' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk] + [federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{A17353BF-A6AA-4ABC-A033-3AB2AA948F6C}' />
    </worksheet>
    <worksheet name='2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Over Populated Country&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Area (sq.km)]' role='measure' type='quantitative' />
            <column caption='ZN([Population])' datatype='integer' name='[Calculation_1143351398457118724]' role='measure' type='quantitative' user:unnamed='ws1'>
              <calculation class='tableau' formula='ZN([Population])' />
            </column>
            <column caption='ZN([Area (sq.km)])' datatype='real' name='[Calculation_1143351398472335368]' role='measure' type='quantitative' user:unnamed='ws1'>
              <calculation class='tableau' formula='ZN([Area (sq.km)])' />
            </column>
            <column caption='Over Population' datatype='integer' name='[Calculation_985443935853862912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT([Population]/[Area (sq.km)])' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name Set]' derivation='InOut' name='[io:Country Name Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Not Over Populated' />
                <alias key='true' value='Over Populated' />
              </aliases>
            </column-instance>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1143351398457118724]' derivation='Sum' name='[sum:Calculation_1143351398457118724:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1143351398472335368]' derivation='Sum' name='[sum:Calculation_1143351398472335368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_985443935853862912]' derivation='Sum' name='[sum:Calculation_985443935853862912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country Name:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457118724:qk]' value='' />
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398472335368:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]' value='false' />
            <format attr='break-on-special' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' value='YEAR' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457118724:qk]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398472335368:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area (sq.km):&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398472335368:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457118724:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population/sq.km:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_985443935853862912:qk]</cols>
      </table>
      <simple-id uuid='{3E7A376C-48E2-45A5-853B-8FC4CD3BEE06}' />
    </worksheet>
    <worksheet name='2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Country with The Bigest Population
</run>
            <run fontsize='12'><![CDATA[Year: <[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name Set]' derivation='InOut' name='[io:Country Name Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Not Over Populated' />
                <alias key='true' value='Over Populated' />
              </aliases>
            </column-instance>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set 2]' />
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' value='79' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' value='YEAR'>
              <formatted-text>
                <run>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{CBE7C974-7449-4E37-9474-6695BD908BA6}' />
    </worksheet>
    <worksheet name='2.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Smallest Land Area Country&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Area (sq.km)]' role='measure' type='quantitative' />
            <column caption='String Calculation' datatype='string' name='[Calculation_1143351398455455744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='UPPER([Country Name])' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name Set]' derivation='InOut' name='[io:Country Name Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Not Over Populated' />
                <alias key='true' value='Over Populated' />
              </aliases>
            </column-instance>
            <column-instance column='[Calculation_1143351398455455744]' derivation='None' name='[none:Calculation_1143351398455455744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (sq.km)]' derivation='Sum' name='[sum:Area (sq.km):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]'>
            <groupfilter count='20' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Area (sq.km)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' />
              <size column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]' />
              <text column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_1143351398455455744:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_1143351398455455744:nk]>: <[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Area (sq.km):&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]> km²]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D3650264-2B36-47C9-B668-B4543C346DF0}' />
    </worksheet>
    <worksheet name='2.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Birth &amp; Death &#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
            <column caption='ZN([Birth])' datatype='real' name='[Calculation_1143351398456938497]' role='measure' type='quantitative' user:unnamed='ws4'>
              <calculation class='tableau' formula='ZN([Birth])' />
            </column>
            <column caption='ZN([Death])' datatype='real' name='[Calculation_1143351398457016323]' role='measure' type='quantitative' user:unnamed='ws4'>
              <calculation class='tableau' formula='ZN([Death])' />
            </column>
            <column caption='Population Growth' datatype='real' name='[Calculation_1338976507629178883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(ZN([Birth])-ZN([Death]))' />
            </column>
            <column caption='Color Death&gt;Birth' datatype='string' name='[Calculation_985443935893602305]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Death]) &gt; SUM([Birth]) THEN &quot;RED&quot; ELSE &quot;GREEN&quot; END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Death]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1143351398456938497]' derivation='Sum' name='[sum:Calculation_1143351398456938497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1143351398457016323]' derivation='Sum' name='[sum:Calculation_1143351398457016323:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1338976507629178883]' derivation='User' name='[usr:Calculation_1338976507629178883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_985443935893602305]' derivation='User' name='[usr:Calculation_985443935893602305:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398456938497:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457016323:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507629178883:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398456938497:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398457016323:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507629178883:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' value='183' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' value='21' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' value='YEAR'>
              <formatted-text>
                <run>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_985443935893602305:nk]' />
              <text column='[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{D2AEEA30-BB47-474C-A00D-704DC0269F1E}' />
    </worksheet>
    <worksheet name='2.5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.16xwp760czvp1212infh50jpqcpw].[Continent]</run>
            <run>&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Death]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Birth]' derivation='Sum' name='[sum:Birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death]' derivation='Sum' name='[sum:Death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent)]'>
            <groupfilter function='level-members' level='[Continent]' user:ui-action-filter='[Action6_D68AD435CE164A719296C585F62B3A8A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]'>
            <groupfilter function='level-members' level='[Continent]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]' field-type='quantitative' fold='true' range-type='uniform' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
              <tooltip column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk] + [federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{9E9FA243-A71A-4294-ACBA-206661123371}' />
    </worksheet>
    <worksheet name='2.6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Developed vs. Developing Country
</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column caption='Count Country Category' datatype='real' name='[Calculation_1338976507639382024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Country Name (group)])/10' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Fixed Count Country' datatype='integer' name='[Count Country Category (copy)_1338976507760070672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT({ FIXED [Continent] : COUNT([Country Name])/10})' />
            </column>
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count Country Category (copy)_1338976507760070672]' derivation='Sum' name='[sum:Count Country Category (copy)_1338976507760070672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1338976507639382024]' derivation='User' name='[usr:Calculation_1338976507639382024:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent)]'>
            <groupfilter function='level-members' level='[Continent]' user:ui-action-filter='[Action6_D68AD435CE164A719296C585F62B3A8A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]'>
            <groupfilter function='level-members' level='[Country Name (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' direction='DESC' />
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent)]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507639382024:qk]' value='N' />
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Count Country Category (copy)_1338976507760070672:qk]' value='*' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Count Country Category (copy)_1338976507760070672:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#666666'><![CDATA[Total <[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]> :]]></run>
                <run fontalignment='1'>Æ </run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507639382024:qk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#666666'>Total Country </run>
                <run fontalignment='1' fontcolor='#787878'>:&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Count Country Category (copy)_1338976507760070672:qk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507639382024:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{AF5AD663-9610-45A1-809D-233913799E02}' />
    </worksheet>
    <worksheet name='2.7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Urban Country&#10;</run>
            <run fontsize='8' italic='true'>above 5% population/ continent  </run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column caption='Fixed Sub-Total Populasi' datatype='integer' name='[Calculation_1143351398486978570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Continent]: SUM([Population])}' />
            </column>
            <column caption='Percentage of County Population' datatype='real' name='[Calculation_1338976507619827712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Population]/[Calculation_1143351398486978570]' />
            </column>
            <column caption='Color Population' datatype='string' name='[Color Death&gt;Birth (copy)_1338976507622420482]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Calculation_1338976507619827712]) &gt; 0.05 THEN &quot;BLUE&quot; ELSE &quot;RED&quot; END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1338976507619827712]' derivation='Sum' name='[pcto:sum:Calculation_1338976507619827712:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1143351398486978570]' derivation='Sum' name='[sum:Calculation_1143351398486978570:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Color Death&gt;Birth (copy)_1338976507622420482]' derivation='User' name='[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Channel Islands&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Arab World&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Bahamas, The&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[pcto:sum:Calculation_1338976507619827712:qk:6]' scope='rows' value='Total Percentage of County Population' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' />
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398486978570:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]>:]]></run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percentage of Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[pcto:sum:Calculation_1338976507619827712:qk:6]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Continent Total Populasi:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1143351398486978570:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[pcto:sum:Calculation_1338976507619827712:qk:6]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]</cols>
      </table>
      <simple-id uuid='{AEEF1607-93BA-4A08-AB4A-ED05A74E1024}' />
    </worksheet>
    <worksheet name='2.8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GNI Percapita&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column caption='ZN([GNI Percapita])' datatype='real' name='[Calculation_1338976507649302537]' role='measure' type='quantitative' user:unnamed='ws8'>
              <calculation class='tableau' formula='ZN([GNI Percapita])' />
            </column>
            <column caption='GNI Under AVG' datatype='string' name='[Calculation_1338976507649908746]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM(ZN([GNI Percapita]))&lt; ATTR([Fixed Sub-Total Populasi (copy)_1338976507638620167]) THEN &apos;Below Avarage&apos; ELSE &apos;Above Avarage&apos; END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Attribute' caption='Exclude Avarage GNI' datatype='real' name='[Fixed Sub-Total Populasi (copy)_1338976507638620167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Country Name]: AVG([GNI Percapita])}' />
            </column>
            <column datatype='real' name='[GNI Percapita]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Fixed Sub-Total Populasi (copy)_1338976507638620167]' derivation='Attribute' name='[attr:Fixed Sub-Total Populasi (copy)_1338976507638620167:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1338976507649302537]' derivation='Sum' name='[sum:Calculation_1338976507649302537:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1338976507649908746]' derivation='User' name='[usr:Calculation_1338976507649908746:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' filter-group='4'>
            <groupfilter function='level-members' level='[Country Name (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Bahamas, The&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Channel Islands&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Arab World&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Gambia, The&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1338976507649302537:qk]' scope='rows' value='GNI Percapita' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' value='105' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[attr:Fixed Sub-Total Populasi (copy)_1338976507638620167:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]> Avarage GNI : <[federated.16xwp760czvp1212infh50jpqcpw].[attr:Fixed Sub-Total Populasi (copy)_1338976507638620167:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='8' italic='true'>Using Exclude Country</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>GNI Percapita:&#9;</run>
                <run bold='true'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1338976507649302537:qk]> ]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Calculation_1338976507649302537:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</cols>
      </table>
      <simple-id uuid='{856B95B6-7827-4CCE-80FB-86D944EB1D5C}' />
    </worksheet>
    <worksheet name='2.9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Urban Country Population &amp; GNI Avg.
</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column caption='Include Country' datatype='real' name='[Calculation_1338976507656069134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({INCLUDE [Country Name (group)], [Country Name]: SUM([GNI Percapita])})' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GNI Percapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1338976507656069134]' derivation='User' name='[cum:usr:Calculation_1338976507656069134:qk:7]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[GNI Percapita]' derivation='Sum' name='[sum:GNI Percapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:7]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:7]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' filter-group='4'>
            <groupfilter function='level-members' level='[Country Name (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]' />
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' value='183' />
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[cum:usr:Calculation_1338976507656069134:qk:7]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)] / [federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{ACBDBDFD-FEA8-415C-B399-568A64AE9E28}' />
    </worksheet>
    <worksheet name='2.9.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GNI Percapita]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GNI Percapita]' derivation='Sum' name='[sum:GNI Percapita:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]' />
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:vtavg:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)] / ([federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk] / [federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]))</rows>
        <cols />
        <subtotals>
          <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{C1CDCAC5-8D4B-481F-9877-FD7C585F7541}' />
    </worksheet>
    <worksheet name='3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trend Line&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='real' name='[Birth]' role='measure' type='quantitative' />
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Birth]' derivation='Sum' name='[sum:Birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_432686EBAF69495DA4AACA7422ED5BEA]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Continent]' />
              <groupfilter function='level-members' level='[Country Name]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Action (Continent,Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Birth:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]</cols>
      </table>
      <simple-id uuid='{0D14F033-1192-45B4-A65B-BEEC07A05C3D}' />
    </worksheet>
    <worksheet name='3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Reference Line&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set 2]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set 2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]</rows>
        <cols>([federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk] / [federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk])</cols>
      </table>
      <simple-id uuid='{08AB4024-FEAA-4136-B589-26733983B46D}' />
    </worksheet>
    <worksheet name='3.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Clustering&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{ae9bcda5-4b2e-4f83-8327-2d858dd71a4f}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Currency Exc.]' role='measure' type='quantitative' />
            <column datatype='real' name='[GNI Percapita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Net Percapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Currency Exc.]' derivation='Sum' name='[sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GNI Percapita]' derivation='Sum' name='[sum:GNI Percapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Percapita]' derivation='Sum' name='[sum:Net Percapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='shape' field='[none:AdhocCluster:1:ok]' type='shape'>
                  <map to='Ratings/0.png'>
                    <bucket>1</bucket>
                  </map>
                  <map to='Ratings/4.png'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#bab0ac'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]'>
            <groupfilter function='member' level='[Country Name (group)]' member='&quot;Developed Country&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Net Percapita:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Net Percapita:qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[sum:GNI Percapita:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]</cols>
      </table>
      <simple-id uuid='{C9AFBE39-BD6A-42C1-90A1-7E1C455F88D0}' />
    </worksheet>
    <worksheet name='3.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forcasting&#10;</run>
            <run bold='true' fontsize='10'><![CDATA[<[federated.16xwp760czvp1212infh50jpqcpw].[Country Name]> Currency Exchange]]></run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Currency Exc.]' role='measure' type='quantitative' />
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Currency Exc.]' derivation='Sum' forecast-column-base='[sum:Currency Exc.:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Currency Exc.]' derivation='Sum' name='[sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action8_D40837E1F1D748D6BD19992B50471A5A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Action (Country Name)]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Forecast Indicator:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.16xwp760czvp1212infh50jpqcpw].[fVal:sum:Currency Exc.:qk]</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='5' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{18B74587-0E40-4173-9398-AA5055A52DAE}' />
    </worksheet>
    <worksheet name='3.5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Control Chart&#10;</run>
            <run bold='true' fontsize='10'>Indonesia Currency Exchange</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Standard Deviations' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column caption='Lower Bound' datatype='real' name='[Calculation_591660444979019776]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Currency Exc.]))- (WINDOW_STDEV(SUM([Currency Exc.]))* [Parameters].[Parameter 1])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Outliers' datatype='boolean' name='[Calculation_591660444981534722]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Currency Exc.]) &lt; [Calculation_591660444979019776] OR SUM([Currency Exc.]) &gt; [Lower Bound (copy)_591660444981313537]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Currency Exc.]' role='measure' type='quantitative' />
            <column datatype='real' name='[Death]' role='measure' type='quantitative' />
            <column caption='Upper Bound ' datatype='real' name='[Lower Bound (copy)_591660444981313537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Currency Exc.]))+ (WINDOW_STDEV(SUM([Currency Exc.]))* [Parameters].[Parameter 1])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Currency Exc.]' derivation='Sum' name='[sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death]' derivation='Sum' name='[sum:Death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_591660444979019776]' derivation='User' name='[usr:Calculation_591660444979019776:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_591660444981534722]' derivation='User' name='[usr:Calculation_591660444981534722:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.16xwp760czvp1212infh50jpqcpw].[Calculation_591660444979019776]' ordering-type='Rows' />
              <table-calc field='[federated.16xwp760czvp1212infh50jpqcpw].[Lower Bound (copy)_591660444981313537]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Lower Bound (copy)_591660444981313537]' derivation='User' name='[usr:Lower Bound (copy)_591660444981313537:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Lower Bound (copy)_591660444981313537:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_591660444979019776:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[sum:Death:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Lower Bound (copy)_591660444981313537:qk]&quot;</bucket>
              <bucket>&quot;[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_591660444979019776:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' included-values='non-null' />
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' value='120' />
            <format attr='width' field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_591660444981534722:nk]' />
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
              <text column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk] + [federated.16xwp760czvp1212infh50jpqcpw].[Multiple Values])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{3C13EE92-9A5E-4208-A639-263C16260FB1}' />
    </worksheet>
    <worksheet name='3.6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pareto Chart  &#10;</run>
            <run bold='true' fontsize='12'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
          </datasources>
          <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Developed Country&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central Europe and the Baltics&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Currency Exc.]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[pcto:cum:sum:Population:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Currency Exc.]' derivation='Sum' name='[sum:Currency Exc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]'>
            <groupfilter function='member' level='[Country Name (group)]' member='&quot;Developed Country&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</column>
            <column>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Currency Exc.:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk:1]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk:1]' scope='rows' value='Contribution' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16xwp760czvp1212infh50jpqcpw].[sum:Population:qk] + [federated.16xwp760czvp1212infh50jpqcpw].[pcto:cum:sum:Population:qk:1])</rows>
        <cols>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{C00361A9-45B8-4DFF-878E-1A2A1A39AFDE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='D1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
      </datasources>
      <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
        <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='24' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='14' type-v2='layout-basic' w='99002' x='499' y='993'>
              <zone h='52590' id='10' name='2.2' w='58416' x='41085' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='750' h='52590' id='13' is-fixed='true' name='2.3' w='40586' x='499' y='993'>
                <layout-cache fixed-size-h='542' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45424' id='18' name='2.1' w='99002' x='499' y='53583'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8437' id='22' type-v2='text' w='27556' x='68080' y='80273'>
          <formatted-text>
            <run fontsize='15'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </zone>
        <zone h='8685' id='25' mode='dropdown' name='2.2' param='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' type-v2='filter' values='database' w='10474' x='87157' y='12531' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='48' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='280' h='52590' id='13' is-fixed='true' name='2.3' w='40586' x='499' y='993'>
                  <layout-cache fixed-size-h='542' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8685' id='25' mode='dropdown' name='2.2' param='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' type-v2='filter' values='database' w='10474' x='87157' y='12531'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52590' id='10' is-fixed='true' name='2.2' w='58416' x='41085' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45424' id='18' is-fixed='true' name='2.1' w='99002' x='499' y='53583'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8437' id='22' type-v2='text' w='27556' x='68080' y='80273'>
                  <formatted-text>
                    <run fontsize='15'>Giany Caroline - 00000037516</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F0681EB-619E-411C-B720-5B71BE0AD0CD}' />
    </dashboard>
    <dashboard name='D2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Giany Caroline - 00000037516</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
      </datasources>
      <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
        <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
            <bin default-name='false' value='&quot;Developed Country&quot;'>
              <value>&quot;Antigua and Barbuda&quot;</value>
              <value>&quot;Australia&quot;</value>
              <value>&quot;Austria&quot;</value>
              <value>&quot;Bahamas, The&quot;</value>
              <value>&quot;Barbados&quot;</value>
              <value>&quot;Belgium&quot;</value>
              <value>&quot;Canada&quot;</value>
              <value>&quot;Central Europe and the Baltics&quot;</value>
              <value>&quot;Chile&quot;</value>
              <value>&quot;Croatia&quot;</value>
              <value>&quot;Cyprus&quot;</value>
              <value>&quot;Czech Republic&quot;</value>
              <value>&quot;Denmark&quot;</value>
              <value>&quot;Estonia&quot;</value>
              <value>&quot;Finland&quot;</value>
              <value>&quot;France&quot;</value>
              <value>&quot;Germany&quot;</value>
              <value>&quot;Greece&quot;</value>
              <value>&quot;Hong Kong SAR, China&quot;</value>
              <value>&quot;Hungary&quot;</value>
              <value>&quot;Iceland&quot;</value>
              <value>&quot;Ireland&quot;</value>
              <value>&quot;Israel&quot;</value>
              <value>&quot;Italy&quot;</value>
              <value>&quot;Japan&quot;</value>
              <value>&quot;Korea, Rep.&quot;</value>
              <value>&quot;Latvia&quot;</value>
              <value>&quot;Lithuania&quot;</value>
              <value>&quot;Luxembourg&quot;</value>
              <value>&quot;Malta&quot;</value>
              <value>&quot;Netherlands&quot;</value>
              <value>&quot;New Zealand&quot;</value>
              <value>&quot;Norway&quot;</value>
              <value>&quot;Poland&quot;</value>
              <value>&quot;Portugal&quot;</value>
              <value>&quot;Puerto Rico&quot;</value>
              <value>&quot;Qatar&quot;</value>
              <value>&quot;Saudi Arabia&quot;</value>
              <value>&quot;Seychelles&quot;</value>
              <value>&quot;Singapore&quot;</value>
              <value>&quot;Slovak Republic&quot;</value>
              <value>&quot;Slovenia&quot;</value>
              <value>&quot;Spain&quot;</value>
              <value>&quot;St. Kitts and Nevis&quot;</value>
              <value>&quot;Sweden&quot;</value>
              <value>&quot;Switzerland&quot;</value>
              <value>&quot;Trinidad and Tobago&quot;</value>
              <value>&quot;United Kingdom&quot;</value>
              <value>&quot;United States&quot;</value>
              <value>&quot;Uruguay&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year (Year)' datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='53' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='40' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
              <zone fixed-size='794' h='98014' id='37' is-fixed='true' param='horz' type-v2='layout-flow' w='49501' x='499' y='993'>
                <zone h='98014' id='13' param='vert' type-v2='layout-flow' w='49501' x='499' y='993'>
                  <zone h='98014' id='7' param='horz' type-v2='layout-flow' w='49501' x='499' y='993'>
                    <zone h='98014' id='5' type-v2='layout-basic' w='49501' x='499' y='993'>
                      <zone h='39079' id='3' name='2.4' w='49501' x='499' y='993'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='58935' id='38' name='2.5' w='49501' x='499' y='40072'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='98014' id='43' name='2.6' w='49497' x='50000' y='993'>
                <layout-cache cell-count-w='5' non-cell-size-w='67' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8437' id='15' mode='dropdown' name='2.4' param='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' type-v2='filter' values='database' w='9975' x='31297' y='2481' />
        <zone h='15012' id='54' name='2.6' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type-v2='filter' values='database' w='10474' x='88466' y='1489' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontsize='15'>Giany Caroline - 00000037516</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='57' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8437' id='15' mode='dropdown' name='2.4' param='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' type-v2='filter' values='database' w='9975' x='31297' y='2481'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39079' id='3' is-fixed='true' name='2.4' w='49501' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15012' id='54' mode='checkdropdown' name='2.6' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type-v2='filter' values='database' w='10474' x='88466' y='1489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98014' id='43' is-fixed='true' name='2.6' w='49497' x='50000' y='993'>
                  <layout-cache cell-count-w='5' non-cell-size-w='67' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58935' id='38' is-fixed='true' name='2.5' w='49501' x='499' y='40072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B88545B-09C9-4B5E-9074-A8E20626591C}' />
    </dashboard>
    <dashboard name='D3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Year (World Population)' name='federated.16xwp760czvp1212infh50jpqcpw' />
      </datasources>
      <datasource-dependencies datasource='federated.16xwp760czvp1212infh50jpqcpw'>
        <column caption='Country Category' datatype='string' name='[Country Name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <calculation class='categorical-bin' column='[Country Name]' default='&quot;Developing Country&quot;' new-bin='true'>
            <bin default-name='false' value='&quot;Developed Country&quot;'>
              <value>&quot;Antigua and Barbuda&quot;</value>
              <value>&quot;Australia&quot;</value>
              <value>&quot;Austria&quot;</value>
              <value>&quot;Bahamas, The&quot;</value>
              <value>&quot;Barbados&quot;</value>
              <value>&quot;Belgium&quot;</value>
              <value>&quot;Canada&quot;</value>
              <value>&quot;Central Europe and the Baltics&quot;</value>
              <value>&quot;Chile&quot;</value>
              <value>&quot;Croatia&quot;</value>
              <value>&quot;Cyprus&quot;</value>
              <value>&quot;Czech Republic&quot;</value>
              <value>&quot;Denmark&quot;</value>
              <value>&quot;Estonia&quot;</value>
              <value>&quot;Finland&quot;</value>
              <value>&quot;France&quot;</value>
              <value>&quot;Germany&quot;</value>
              <value>&quot;Greece&quot;</value>
              <value>&quot;Hong Kong SAR, China&quot;</value>
              <value>&quot;Hungary&quot;</value>
              <value>&quot;Iceland&quot;</value>
              <value>&quot;Ireland&quot;</value>
              <value>&quot;Israel&quot;</value>
              <value>&quot;Italy&quot;</value>
              <value>&quot;Japan&quot;</value>
              <value>&quot;Korea, Rep.&quot;</value>
              <value>&quot;Latvia&quot;</value>
              <value>&quot;Lithuania&quot;</value>
              <value>&quot;Luxembourg&quot;</value>
              <value>&quot;Malta&quot;</value>
              <value>&quot;Netherlands&quot;</value>
              <value>&quot;New Zealand&quot;</value>
              <value>&quot;Norway&quot;</value>
              <value>&quot;Poland&quot;</value>
              <value>&quot;Portugal&quot;</value>
              <value>&quot;Puerto Rico&quot;</value>
              <value>&quot;Qatar&quot;</value>
              <value>&quot;Saudi Arabia&quot;</value>
              <value>&quot;Seychelles&quot;</value>
              <value>&quot;Singapore&quot;</value>
              <value>&quot;Slovak Republic&quot;</value>
              <value>&quot;Slovenia&quot;</value>
              <value>&quot;Spain&quot;</value>
              <value>&quot;St. Kitts and Nevis&quot;</value>
              <value>&quot;Sweden&quot;</value>
              <value>&quot;Switzerland&quot;</value>
              <value>&quot;Trinidad and Tobago&quot;</value>
              <value>&quot;United Kingdom&quot;</value>
              <value>&quot;United States&quot;</value>
              <value>&quot;Uruguay&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='24' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='19' type-v2='layout-basic' w='99002' x='499' y='993'>
              <zone h='60670' id='17' name='2.7' w='43142' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98014' id='22' name='2.8' w='55860' x='43641' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37344' id='30' name='2.9' w='43142' x='499' y='61663'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9429' id='29' name='2.8' pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]' type-v2='color' w='9850' x='77743' y='1489' />
        <zone h='15012' id='26' name='2.8' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type-v2='filter' w='10474' x='88591' y='1241' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='41' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='60670' id='17' is-fixed='true' name='2.7' w='43142' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15012' id='26' mode='checkdropdown' name='2.8' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type-v2='filter' w='10474' x='88591' y='1241'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98014' id='22' is-fixed='true' name='2.8' w='55860' x='43641' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9429' id='29' name='2.8' pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]' type-v2='color' w='9850' x='77743' y='1489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37344' id='30' is-fixed='true' name='2.9' w='43142' x='499' y='61663'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5832198C-78F7-4541-9D41-166AC16B64F9}' />
    </dashboard>
    <dashboard name='D4'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='3' name='3.1' w='49501' x='499' y='993'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98014' id='5' name='3.2' w='49501' x='50000' y='993'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='14' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98014' id='3' is-fixed='true' name='3.1' w='49501' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98014' id='5' is-fixed='true' name='3.2' w='49501' x='50000' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{72C2EE64-1ED2-467F-AF8C-B0E52C58FA8C}' />
    </dashboard>
    <dashboard name='D5'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='6' type-v2='layout-basic' w='99002' x='499' y='993'>
              <zone h='98014' id='5' name='3.3' w='49497' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98014' id='10' name='3.4' w='49505' x='49996' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='20' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98014' id='5' is-fixed='true' name='3.3' w='49497' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98014' id='10' is-fixed='true' name='3.4' w='49505' x='49996' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E3AE3A2-9C10-4357-B82C-8EEE627A9EA9}' />
    </dashboard>
    <dashboard name='D6'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='7' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='5' type-v2='layout-basic' w='57189' x='499' y='993'>
              <zone h='98014' id='3' name='3.5' w='57189' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98014' id='11' name='3.6' w='41813' x='57688' y='993'>
              <layout-cache cell-count-w='46' non-cell-size-w='211' type-h='fixed' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='18' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='280' h='98014' id='3' is-fixed='true' name='3.5' w='57189' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98014' id='11' is-fixed='true' name='3.6' w='41813' x='57688' y='993'>
                  <layout-cache cell-count-w='46' non-cell-size-w='211' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AB806281-76A9-4BAF-AB06-B9B3E49F42AE}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Giany Caroline - 00000037516</run>
            <run>Æ&#10;</run>
            <run fontsize='12' italic='true'>Soal Ujian Nomor 2</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98454' id='1' param='vert' removable='false' type-v2='layout-flow' w='99166' x='417' y='773'>
            <zone h='7246' id='3' type-v2='title' w='99166' x='417' y='773' />
            <zone h='9758' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99166' x='417' y='8019' />
            <zone h='81450' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99166' x='417' y='17777'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Over Population' captured-sheet='D1' id='2' />
                  <story-point caption='Population Growth' captured-sheet='D2' id='3' />
                  <story-point caption='Urban Country' captured-sheet='D3' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{683E92B7-DB72-49D6-9B27-64DF01813077}' />
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Giany Caroline - 00000037516</run>
            <run>Æ&#10;</run>
            <run fontsize='12' italic='true'>Soal Ujian Nomor 3 </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98454' id='1' param='vert' removable='false' type-v2='layout-flow' w='99166' x='417' y='773'>
            <zone h='7246' id='3' type-v2='title' w='99166' x='417' y='773' />
            <zone h='9758' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99166' x='417' y='8019' />
            <zone h='81450' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99166' x='417' y='17777'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Trend &amp; Reference Line' captured-sheet='D4' id='1' />
                  <story-point caption='Clustering &amp; Forcasting' captured-sheet='D5' id='2' />
                  <story-point caption='Control &amp; Pareto Chart' captured-sheet='D6' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4E013E68-F91C-43D5-935F-8DB3894CC955}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='1.1' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type='color' />
            <card pane-specification-id='4' param='[federated.16xwp760czvp1212infh50jpqcpw].[sum:2020:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[attr:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set 2:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_985443935960293379:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_985443935960768517:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Calculation_985443935961640966:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4E212DF3-4122-473A-A4D3-23AF78FAEA20}' />
    </window>
    <window class='worksheet' name='1.1.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48D2C61B-79E2-4228-A5AA-69E0995265FC}' />
    </window>
    <window class='worksheet' maximized='true' name='1.2' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66C1051B-15EF-4377-8818-EEADA873B44D}' />
    </window>
    <window class='dashboard' name='Story 1' tab-color='#f66273'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{62477E97-2A01-43EA-A1E1-8F051848ACFA}' />
    </window>
    <window class='dashboard' name='D1' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='2.1' />
        <viewpoint name='2.2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2.3'>
          <highlight>
            <color-one-way>
              <field>[federated.16xwp760czvp1212infh50jpqcpw].[sum:Area (sq.km):qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{3B8994BE-2CAD-4CC2-9462-A53DD22DD31A}' />
    </window>
    <window class='worksheet' name='2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25EB4C01-3B2A-4E48-A427-7DF078BDE25E}' />
    </window>
    <window class='worksheet' name='2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57A788F0-91F3-4B57-BFF0-A2BC27D4BC70}' />
    </window>
    <window class='worksheet' name='2.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[io:Country Name Set:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_1143351398455455744:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C6FB3A4-3685-4167-84EC-6AD106077DC1}' />
    </window>
    <window class='dashboard' name='D2' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='2.4' />
        <viewpoint name='2.5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2.6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FF9B97A-32F4-4A0C-A687-80BA5EEFFBB2}' />
    </window>
    <window class='worksheet' name='2.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[io:Continent Set:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Calculation_985443935916126210:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_985443935893602305:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9626A683-191A-4389-B88B-8F574F102CCF}' />
    </window>
    <window class='worksheet' name='2.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]' type='filter' />
            <card pane-specification-id='1' param='[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Continent Set]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E14CD133-3010-4953-B9CD-AD39831DA938}' />
    </window>
    <window class='worksheet' name='2.6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{580C4405-78B1-4160-8A25-B28A73325F8F}' />
    </window>
    <window class='dashboard' name='D3' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='2.7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2.8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2.9' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DFFF6DE3-596B-4A5A-8908-B51633467A02}' />
    </window>
    <window class='worksheet' name='2.7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Code (Country):nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name (Area):nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name (Country):nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_985443935893602305:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Color Death&gt;Birth (copy)_1338976507622420482:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77420F6E-B7CE-4D63-8BFD-602DAEBE79CE}' />
    </window>
    <window class='worksheet' name='2.8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' size='26' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]' size='9' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F86B7844-A611-47AD-9B76-7BCD7B465A5B}' />
    </window>
    <window class='worksheet' name='2.9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Color Death&gt;Birth (copy)_1338976507652534284:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC64E89A-6166-407C-9D0E-5F6D3B7A63BC}' />
    </window>
    <window class='worksheet' name='2.9.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0B54FD4-9888-43B5-AD6D-0B21D74A3FF8}' />
    </window>
    <window class='dashboard' name='Story 2' tab-color='#f66273'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{92AD0D4E-3824-41ED-8EFC-A037B0B4DF4B}' />
    </window>
    <window class='dashboard' name='D4' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='3.1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3.2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9FF7BC50-AF44-4CAE-82AC-55BBA7CECB7A}' />
    </window>
    <window class='worksheet' name='3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D26BF523-606F-4DA9-A415-F63D413CB550}' />
    </window>
    <window class='worksheet' name='3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name Set 2]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name (Country):nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B34EE5C6-C6C9-4A87-84BD-645B42B5552A}' />
    </window>
    <window class='dashboard' name='D5' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='3.3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:AdhocCluster:2:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='3.4'>
          <zoom type='entire-view' />
          <highlight field='[federated.16xwp760czvp1212infh50jpqcpw].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3C237B19-9F72-44B6-A803-11357E67DB17}' />
    </window>
    <window class='worksheet' name='3.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.16xwp760czvp1212infh50jpqcpw].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[:Measure Names]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Set 1]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:AdhocCluster:1:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:AdhocCluster:2:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name (Country):nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:ok]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34118523-DC8A-4D50-A06D-F4582DEF10CD}' />
    </window>
    <window class='worksheet' name='3.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Forecast Indicator:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{484AE7BA-313A-4D98-B9E5-178A8780E125}' />
    </window>
    <window class='dashboard' name='D6' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='3.5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3.6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{20958E84-6BEA-4604-996C-8C6666550BA1}' />
    </window>
    <window class='worksheet' name='3.5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='4' param='[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_591660444981534722:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Code:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[tyr:Year:qk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_1338976507649908746:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[usr:Calculation_591660444981534722:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F75689AE-6F3E-4080-9EC3-3126D1FD5D35}' />
    </window>
    <window class='worksheet' name='3.6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[Country Name (group)]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Continent:nk]</field>
            <field>[federated.16xwp760czvp1212infh50jpqcpw].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B93EB916-F865-4A8B-ADF0-3B767F50E080}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1.1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.1.1' width='192'>
      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
      EgDhb/8fJmjYshWGCisAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.1' width='192'>
      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
      pQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2.2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2.3' width='192'>
      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
      pPCHHPd6+/9Q/qoyy+vFSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='150' name='2.4' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2.5' width='192'>
      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
      ZRIAwtv+P+atkYEl1TkyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2.6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.7' width='192'>
      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
      H4hJh9YQd9d6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2.8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.9' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2.9.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='3.2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAcsUlEQVR4nO3dd5Ac14Hf8W/3hJ3Znc05R+xid5EDkcGcTYnUSSZ9lBUtybKvbJUlVals
      Xx3vdHc6xVOVJFtnlxUtUeFIU9SJYpAoAiDSYoHFLjbnnGdnZ3bydPfzHwgECRIDcAfYAft9
      qljYmenpftN8v36ve96bVoQQAkkyKXWtCyBJa2lNAiAbHSlZrEkAdF1fi81K0hVkF0gyNeuq
      3m1odJ/rIBDVCUYV9u5s5OTxUyiqQkXDNrSpYXK3bmJloJ2wq4ba4owEFVuSEkNZ1VUgIdAN
      gYLO0SPHqavKwmuror7Axom2HgpVyFhfwUDPDHt2bkQYBkIIdF1HVWXjI6291bUAikI0uETr
      mU5qN25FLPaR4kpBURUMQ0cQo/VYC7Ub96FcWF5RFAzDkAGQksIqu0AxzpzpYtuefaTZrQQo
      oGt6inw1BUdaFkpkhT333k/vkSP4sveT4Ti/OUVRZACkpLCqLpDQIrSdPYuBBYstjQ2bGpgZ
      7scdMGhuXk9gfp7U4iIsER/T7ijlJXkogKZpWK2ry54kJcLqzgHeJRkAKVnIfohkajIAkqnJ
      AEimJgMgmZoMgGRqMgCSqckASKYmAyCZmgyAZGqrDoAQAk3TEOcfoGkxotEYQggMXUcAQhjo
      urHqwkpSoq1yPILBaH835/qneeCR+zB885zsGCbDqWLNKiF1eYG87Vtxd7Wi5jdSVZiemFJL
      UoKsMgAq1Q0bWPFHAdAiQZxZhdSVpNAz5ScVCHqmWdCy2FWY/qa5wHJesJQMEjoiTbU70fxj
      9A6rZOaVIBaW6GzvpqxuKwDGZRNiZACkZJDQAHgXpnAV1tBQoHLs7AgVjhRuu2M3A0dfYzFn
      P3lptjc2LEeDSklgdcOhDY3+ni68wSiq1U7Tho0sTgzgDug0Nq0nurxMSm4ONiPC3EKAwsIc
      OR9ASipyPoBkavJ7AMnUZAAkU5MBkExNBkAyNRkAydRkACRTkwGQTE0GQDI1GQDJ1GQAJFNb
      ZQAE85PDvPzKYWKAMDQ6205xqvUUM+4VJrp6WEGwON7L8IwvIQWWpERadQuQll1IUY4LAfgX
      xgjbcqmpqaMg20U0FCIaXqFnMkC1vDmGlIRWOSJNIS0t7dKjFc8C/lAGS3OTDIzNkmeEOfHq
      a6zfeTcKXJoHIOcDSMkioUMyM/OKSNOgpq6QuVOdKHYH+x54kHOHj1G6/wAOq+WNDcvRoFIS
      SMh8gJkFD2mZ2TRv2MjMcA9uX4jq+iaE142rohyLf5GJJYOaigI5H0BKKnI+gGRq8jKoZGoy
      AJKpyQBIpiYDIJmaDIBkajIAkqnJAEimJgMgmZoMgGRqMgCSqa06AIHlRVpOnUW78FgYOmeO
      /QlPCBbGxgkBIc80Y3NyPoCUfFYZAINAWEPVY1y8/8vceD8+fwB/DHwLi0SMKK0dw5Tky5tj
      SMln1TfIKCgqYnZqGgA94mfcHaO6KAsAYYQ5+uKLNN52DzZVkfMBpKST0CGZU8M9+AIaS4uj
      2LViKlUHu++6g85T56javwuLRc4HkJJLQuYDDI1MkldaxoaNm3FaYWbgLGrJFmJjvWQ1NaDN
      jjATSmN9daGcDyAlFTkfQDIl3TCYdfsT2wWS3tsuHisVRVnjkrw7wXCM0dllTvfPcHZghmBE
      ky2AFJ+mG5wdmOVXf+oiFIlhtVqwWVRsVgs2q3r+P4sFq/XCc5e/9qa/Ly5/YVnLZe+3WrCo
      Cpou0HQdTTOI6QaabhDTjPPP6Reeu+w1TdMv+/vy95xf/uL7IzGNQCiGI8XK5rpCdtSXUF2c
      JQMgvTPdMOgeXeDXr3XjC0R4dP96KgozL1Ww2IXKFdP08/9erLiXPY5dqJSXnrtQMS9/fHE9
      umFgtahYLeeDY7WqWC2WS3/bLrx2MYDWS48vBNByPkyX1vGW92e5HBTluLBa3rj6L2uhdAVD
      CAYnl/j1a91ML67wvn0N3L65EkfKe6+6yBZAukQIwficl1+/1s3A5BIP7V7HPTuqSXPY17po
      N4wMgIQQgtmlAM8c6ubs4Cz37qjlwV11ZKSlrHXRbjgZABMTQrDkC/Hc670cPTfB7Vsqed++
      BrJcTm7RCz3X7doDIAxCkRhOx+qPCjIAa0sIgS8Y4V+ODfDHM8Pctr6UDxxspCA7Lf6b32Ou
      PQChJX78u+N89IMPr3qjMgBrQwhBMBLjxZND/P7kAM3VBXzojibK8s37w8Vxa+FYXydppevI
      AHZsbL4JRZISTQhBJKbz6pkRfvN6H1VFmfzXDx+gpiR7rYu25uIOh37+uWcJRHTU2Ar/97kX
      rnjd0DUmxifQASEMZseHaGvvJBTVWXG7iQJG1M/c4soNKH7i6YaB8R4aqRrTdF5rG+Xz33uZ
      k92TfO5Du/nSk/tl5b8gbgtw94FtfO8b/4DTEmP3vU+85VWD8eEBhsYXKawoR/d7CFkyaV6X
      w4nT7ZTaIC8nh76TrTTtOniDPkLiLPvD/M2PDlFRmMlHHthMtstxy37trxsGLT1T/PLVLlJs
      Fj71yDY21xbesp/nRol7DnDu7GlqGzdhNcKcONvHwT07rlim4/QZ1m/fhp3zrUBPWwtqTiXW
      +RFGAgEq6nfQUJr9pvkAqppcszGjMZ2v/uI42a4UHDYrJ3qm+bPbG7l3e9WbvjlMdgLoHF7g
      6Ve7iERiPH5XEzvXl8iK/w7itgAFWQ6++42/ZyVm5YMf/vhVlzX0GCdfP0xp43bK87MYXpxh
      w5ZKhodmaCjNflOlv3xuwFozDMEPXmzDYbfyFx/YhdWi8uAeLz98oY1XWof55ENb2VxXuNbF
      jKtrZIFfvNrJki/E43dtYP/GclRVVvyriRuAjtMt5NVuodm2QnfvIJvrSt54UegM9fUyMjqK
      Zk+hxCWYDVhwTo9ixM4vl5pVQkX6PD2j86yvOn9/AEieEYVCCJ453MPY7DJPffwObBdu4lFV
      lMVffewOTnRP8v3nW6kqyuJjD26hKMe1xiV+M8MQnB2c5Z8PdePxhXn0QAN3bqvGZlGTZh8n
      s6t2gRbm50hNS0M3FNJTbQxPzFFbVf7GAuL8yL3zq1CwWFR0XQdAVS2oCqCqIARCCBRVTboJ
      MYfOjvKLV7t46mO3U/g2lVsIQTiq8dyRXl5sGeKBXXU8ur8BZ4ptDUr7Bt0wONUzzTOHe4hE
      Nd6/v4H9myqxW2XFvx5XDcA3v/plPvLhP+cff/5H/v6zj/Cl7z7LP3zpP656o8kSgM6Reb79
      6xN88Ym9NFTkXXXZ88MF/PzkpQ5GZjz82/s2sXdD+U2vbDFN53jXJM8e7sGiqjx6YD27Gkux
      WS2m+fY2ka5aCw0tzPjEJF6Pm5HRcSIx/WaV64abWvDxnWda+MRDW6kvz427vKIoFOem88Un
      9tI+NMePXzzLy6eG+diDW6gqyrzhQYjENI50jPPckV7SnXb+zd0b2FZffKnLJr07V20BWo+8
      xMiMF+3COG1XQTUP3r5z1Rtd6xbA6w/z1z86xMHNlbx/f8N1V14hIKppvHhykOeP9rN3Qzkf
      vKORzDRHwssaisR4rW2U54/1k5+ZymMH17OxpvCWujKVzEw3GC4S1fjqz49SlOvikw9txbLK
      irToDfL0H87ROTLPB+9o4o4tVQk5Kq8Eo7x6ZoQXTgxQlp/OYwcbWV+RJyt+gsUNwNGXnyPo
      KOa27ZsTdoRbqwDohsH/ev40SythPv/4Hhz2xJTBEIK+8UV+8lIHQgg+cv9mGivz3lW3aNkf
      5pXWYV45NURNSTaPHVhPXVkOliT73uS9Im4AQn4fvZ1t/P6FF4g6i3j4fe9nR1PNqk641iIA
      QgiePdzL8a4J/vKjB29IdyUa0znUPsqzh3poqirg8bubKciKP8JSCIHbF+KlliEOnR2loSKX
      R/evp7o4W17Hv8HiBqD10L/wx2PnKKis5+C+Hfz2Vz/j8U9/geLMdz9LaC0CcKRjnJ+/co6/
      /OhBSvJu7M80LvvDPHOom5aeaR7aXcd9O2vf9rKpEII5T4DfnxjkeNcEG2sKeN++BioKb/xJ
      tXRe3AD0d7aRU7merBTwrERxOa3YHalYVnFkutkB6Blb4Ju/PM5/+dd7aKzMvymXC4UQDM8s
      87OXO/AGwvz5PRvZsq4Ii6oihGBqcYXfHe/ndN8M2+qLeWRvPSV56bLi32RxA/D9b/4d93/0
      c5SpC3z5hy/zN5//9Ko3ejMDMONe4a9/dIgn79nI/k0VN72CabrBie5JfvVqF2X5Gdx3Wy1H
      OsbpHJ5jd1MZD+5eR2F2mqz4ayRuAA79vx9wckpQYPESzdvEpz90z6o3erMCsBKM8NQPD7F3
      QxmPHWxEXcNK5g9F+e2xfo60j7FvYzn37awjLzNVfnm1xuIGQBgaYyNDREQK1VXl2N9yiU8I
      QTAQJNWVhoIgFPATjApysjPQwhFURwqqoRGKGqRe+HWBmxGAqKbztZ8fJSfDyWce2b7qy52J
      IIQgphnYbfLLq2QRt1b8/p9/SktHP8MDPbS0917xus89w6HDx4kBoeU52roHmZ8aoXd4kvHO
      LlYMnd72M3hDN+9bZH8oyneeaSE3MzUh1/oTRVEUWfmTTNzDsBHyk1mxg8aSTGzOKweLZeaV
      UFY4C4BnboLi6k1UZSscPdVOkRrjxB9fom7jAYqznTfl/gCabvDtX58kI9XOJx7YhKoIYrHY
      DdmWdOuLG4DSukb6Rrs4NgpZpXUU5+e847IpDge+SARh2LCoFhTVwrbdO+nrHKS2cOsNvz+A
      YQh+9FIbMc3gM+/fQYpt7QfcScktbt8gPzeLscE+HFk5eJffMq/X0Ojvamd0fIyzbe048mtw
      D7Vx/GQLFTX1WKxWHOl51Ben0DM6x40ccyGE4HcnBugYnOPzj++RlV+6JnFPgr/71b/ivg88
      wdDYNIdbe/lKEg6HFkLQ0jvNPz1/mr/95J03/Isu6b0jbi08sHs7P/3Rj3GvRLjn0Q/fjDJd
      FyEEQ9Mevv/cKb7wxF5Z+aXrEjcAg2NzfOJz/43KXFdSjktZ9Ab5+tPH+MgDW2iuLljr4ki3
      mLjnAMX5qXz761/nN8//hj+daL8ZZbpmgXCUrz19jDu2VnHn1qq1Lo50C4p7DjDY00EUOxZV
      IcWVRVXp6n8dIRHnAJpm8I1fHsNht/Kf/mxXUrZOUvKL2wK0H3sVj3DR0NCQkMqfCIYh+Okr
      HawEo3z20R2y8kvvWtzDcE5eNj/9zlc4WltNYe0WPvrY6scCrYYQghdbBmntnebvPnWXvNwp
      rUrcLlAsGkE3LtwdULWQYl/9z4GspgvUM7bAN35xnKc+fjvlBZmrLotkbvFHg77wS9r6Zwh5
      5whmbeDL//nJVW90NQHwrIRZCUaoKJSVX1q9uAHQtBiGIYgtjfKVn/6Jv/3iZ1a90bX+VQhJ
      uihuLTz60rO0DcwggDsP3nsTiiRJN89VA/Dbn/0fmu9/nNsfdhFcGOFnfzjH3bvkTTKk946r
      BmByaoIG7UIPyYgyMjF91ZVFA0u0nOnGZlXJLq3DvjRLzpaN+Ac6CLmqqS027614pOR01QC8
      /9GH+af/+S1yc7NZci/yvsc/ddWVhVeWcBZU01ycwtnBWfINjUjAzYhHZe86Wfml5BP3JDga
      DuLzB3G60kmLc4fIsH+RltPdWK0q+RX1KDODDHg81G3ez7qizKS+QYZkTgn9acSpvlP40uqp
      y1U4dqaXshQruds303PkCBt2HSA95fyEGHkVSEoWCQ2AoUUY6OvDHxXU1a/H8HlwFhdhDfuY
      dkcpL81LuvsDSOZmuh/HlaTLyY64ZGoyAJKpyQBIpiYDIJmaDIBkajIAkqnJAEimJgMgmZoM
      gGRqMgCSqSV0PIIQBoPd51gORSmrXg+eeTLqahDzY8zrOdTI+QBSkkloCxBcmiRozWXnjp0U
      56YTXPYS0yO09kxTJSu/lIQS2gIsz08zu2gh7B7BkllKlhHmyAsvsPHAv0KFm3KDDEm6HgkN
      QEZ2HgWWNLbU5nH05BkUu4MDDz1E26GTlN954IbfIEOSrldCh0MLQ6e7o41AWKOkthHL8iIZ
      62pQlqYY99poqC6U8wGkpCLnA0imJi+DSqYmAyCZmgyAZGoyAJKpyQBIpiYDIJmaDIBkajIA
      kqnJAEimJgMgmVrCAyCEQd+50/gi4JmdJQLEAktMLfgSvSlJWrWEB2B5ZoSx0TG8EVianCYk
      dFpPnyMnOz3Rm5KkVUvoiDQjFmZgykt9ZQEAwghz4g8vU7txH06rIucDSEknoQGY6Gtj0aez
      5B3FrhVTqTrYtnsdfV3D1BVukfMBpKRzQ4ZDT3afQCnfTXSwndytmwiOdLNEHo1yPoCUZOR8
      AMnU5GVQydRkACRTkwGQTE0GQDI1GQDJ1GQAJFOTAZBMTQZAMjUZAMnUZAAkU0tsAIRgeXGW
      oZExYrogtOJHA4QeYdkXSuimJCkREhqAqN/NtCdMhlOhpa2T6b5+AkLQ0dqCpsqxP1LySfhg
      OCEMxge6WCaDNO8sy3aVFFcZG2uLMQzj0nyAy4dGS9JaSewtkgyN9lMnsOdXsbG6jOHWeVLT
      nATDYQAURbn078W/JWktJTQAvtkh5sIpNNvB411BUSyU1jYz13GSkbkcqgozURUFwzBQVXn+
      La29hHaBtGiIxSUvACmp6aTZLFicDlShEwxFSU11ygkxUlKRE2IkU5P9EMnUZAAkU5MBkExN
      BkAyNRkAydQSGgAhBDNjA7R39aMZAu/8AhFAD/uYWVxJ5KYkKSESGoDQ0gSjS1BdkMLZriEW
      xycIC4NTp86QkelK5KYkKSESGoBl9xyF5RWk5xQTCSwjjDAnX32FnNotpNnk0Acp+SQ0AHab
      nVgshjAMFFVBUR1s2r6J+clJ5G/hSskooQHIKqlhtqeF4ydOUFq5DhQFZ1YR1Tk63aNzyAxI
      yUYOhZBMTV4GlUztprYAb3djjHcaGn1xubebNyCEuOL5d1rPrfL8232md1r+evdZsn3W63n+
      nT5Toj7rmnSBLne9H1AIgWEYV8woe6cKdL3Pv1P37Eau/93sg7d73jAMgLetRMmyb652YEvU
      vnm7deu6jqqqV7y25gG4XlfbgYla/42crXYj1y/3zdXXDVfum1suAJKUSPIkWDK15LwWaUTp
      bD9HSNOJGHZu21RNy6l2UAR1zTtw6l7a289Que0+KrOtjA720DU6z8P33nlNqw945+nqHcXQ
      I2SXNpBpuBmcWUZgY8/urUwM9NI9scjD99xOwDNL58A4QouSU15PfXlB3PWPD3Yz6wkQCkXY
      fttOBs6eIiwgI7+a+tIMzp1tQ88sZ2dTNaP9nSx6Q/iDEXbv348j3o9l6GHOnOlAFwLDls6m
      mjxOdfQjDINNO3aj+2Y4e66bLXvvJc9lRRgxXn/5BXIa99JcmR+37N6FKfpGptCjQYrWbUPx
      DDO9HAaLk93bmxjo6WHcHeDeg3vwL05wvH2I7MwM6pqayUpNufrKhWCot4Mlf4yVYIwDB3Zw
      +uhRhKqSV9FEWZbKubZWHOXb2FSdx+xoPyOzy6Rl5LChqS7u0VqP+jnT1oVQBNa0fOoL7LT2
      TiB0nd379uGdGeZ09zB33X0PRsBN7+AYlqeeeuqpuHvlplPILSimpKiA8ZERLCJAetlGmqvy
      6R6aoLKinEy7RsiWS3aqldT0LEL+ZYqLS65p7Vabg5KyMrKdMLEYwrO0yO49e1CDs6yo2ZQU
      FhBc8VBSXILV7qSsrJysVJiaD1BalBt3/a7MHMpKS1mZn0K1gsdwsXvbJgb7uiivrCI3Kx2P
      P0JRXjaZOfkUFeThnp4gq6QqfgAUlYKiUooLcxkZGSMa8lHVtJ3aPDs90z6qSouxE8Hqyict
      xcL0cC+GPRXsGRRmp8Utu82RRllZGS5LmJkVlSX3PHv27GFlfgx7VhEF+QWsLC9SUlzC4tQo
      AcVFVVUFuZkurqX3npmTT1lpCbOjw6Q7Nby2cnZtaaS3q4OKqmry0lPwxGwUZjnoONdLaWkx
      eQVFpDnscdetKBaKSssoys1keHQSj2eJnXv2UuII0uu2UFlSgBENkJVbRFqai5KSkiTtAikq
      kRU3R4+dYN2mLRjRGHa7DYvViq5p2Gx21It7W1Gw2+PvnMupFpWpwS7ah5fY0lSDgcCiKDjs
      KYSjGna77bKiqIwPnKNjeIktG+qubQNGjNMnXseWV0V2iorNZgdFRRUgLFasljd2uxZZ4czp
      04QUJw71Gk7HFJWAZ5rXj59mw9at6LqO3WrBnmInGolis9u5eJ4XC3mZ9kJFQcY17xuLRWW4
      u42+OYNN64pBEaiKgt1iJaob2O1vdBoKKhtorC7BOz1I//jCNZRdQWhhjh05TOG6DVhjEVKc
      DlBUFCFQrTYsl/7HRvEuh0h1pdPfcQpvSLuGXaOyPDvK0VOdbN2+FQ2wKeB0OgmFwtjt9jeF
      VOjhZO0CRTjd3suOvftw2ix4QtmMzc+TlqmRlp616tV7Z0eYCTvYc1szqqKQalFYDkWZc3sp
      3fDmo6RvbojZcBp7d9ZwrRcoutpaKW3cRnFWGkbUS2BgmGg4C92SggXQLy4oDAJhwfZdexg7
      d4IZb4SqXMfVV64HOdM5yt4De7FbVELpacy5vYQiC+TmFr5p0XDQTyzip6NrAY/IoaGqAHuc
      Q97CcBe+lCJ2NRWjKApWIQhGY3gCYcrechT2+/04XVnkZGUwG43G3zFCcLrlFE0795LltGOE
      BJ6OSaK5Btjf2oI4yMl2kJqeictpR9PjHxz0sJdzQwsc2L8Hi6qQ57Qy7Q2jTc5TWrzxiuWn
      h/qTswsktBjziwsszM+z4PZTVlNLZGmKOZ9O0/oa5icGGZ7x4Pe4cbgyGOvrYCUYZt69QmFx
      QdxmLexfYWFxgbnZWWLYqaksYbCvB1dhFUWZKXR3tuMPhHEv+UlLs7O05GZudgZNdZDpcsYt
      //LSAgsLC8xMz5NZUEq2PUb/yDQNTc0YATfneocJB/xoih0RWmZgeBRLRhE1JblxQyZiIWYW
      3CzOz7Hki1BdV8vS1BA+3UlDdSmTQz1ML/pYdi+RW1rFuppKCgvyKCguJSM1fku54vPhcc8z
      OzMDNhdVpXn09vRRWLmObAd0dHQQDIVZXomQm+NiqL+fgOFgfV3FZUfvdyg74HHPszC/wPT0
      Innl1aQaXoYmFtmwsZng0jTdQ1MEV5ZRbKnUVBTR39uLK7+SkrzMuPvGCPuZvrBvfGGD+vo6
      Jga6iTnzqSvNZbi3A7c3wOKCh+yCfCKRmLwMKplbcp4DSNJNIgMgmZoMgGRqMgCSqSXnZVBJ
      ehuGHiMY1nClOYmGgxgWOw7bu6vCfvcULx0+I1sA6dahR3x87zv/g0BU45kf/2+mliNEwkG8
      Pj9CgBaL4PF4iMQ0DC1KOBLF7w9cmI8uCPp9rARCGHqMZ37yQ4JqqmwBpFuHLTWXe3eW8/TT
      v8DIqKfcGeBrX/4WId3g/if/AsvUcQ619hFNK+Oz95Tx9adPUtO0hX//5CPM9bXwrR/8BkXo
      PPbEExxv6yInmCFbAOnWsnn/AwycPM4DD93F4uBZQhmV7Lmtmc6OHuyp2WzdcRvB5XkAyjbs
      47NPPoKqQOvR13nyc/+dL3ziETqGPOzbeRuf+Q//TgZAurVYUpyUFVeQlZlCZkkVamAJTUmn
      qbaQP/7pEAHfEt7A+VtyFRYUXvr2eN36On7z85/ws2dfpnZd7aX1yW+CpVuMwcjAMOXr6rAi
      mJsYYnDSTfOmLei+GcYWI2S67JTluliMOCjNT7/wPsFQdztBaxbN6yqZHh0ht6xSBkAyN9kF
      kkzt/wPmQqMCK3nFwQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3.5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D3' width='192'>
      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
      hWPDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='D4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='D5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXAj133nP92NkyQA3tdweA3J4VyyNDpsSfGVdbyxI4+URLaVOL5yOVWu
      9e4fm01tamvLVZtrk3K2trK1m3iTcuxoZTmxo/i2LFvWEVmyZOuY4X3MgBcAgiDuG41++weG
      nKGGHGIGBNgcvk+VxGmy8cWPzffF+71bEUIIJJJDirrfAUgk+4k0gORQIw0gOdRIA0gONdIA
      kkONNIDkULPVAEIQXL7Il77wd3z1698lb8D3v/9kWULhlYssBuNl3fvCj1+44UAlkmpgufoi
      E/Xx2L/8kN/57U+Qja4hBKytBQHw+310dXVj5FMEEzodTQ3MTI6RV+s4MdzHS888xaq1hzvP
      jHBmdIhwcIXF1RhnTp9EFQXWQnEUPQV1zQwMDALg8/txaAKvb50zZ05jVSEeCTI1v0RXTy9H
      u9pr/0Qkh4otNcDPXniOBx75KPUOKy2d3di1Kz97+ukfAlCILPPca7P89EdfZ2IlQTy4jG89
      ic1uw2Z34LDZCC1M8MSTPyafWOOxr36LQjbG33/+b3j6xTewaCo/fPppAL7ztcd45ievkwjO
      850fvUJoaZovPP5NrBaNRx97vHZPQXJo2WKAfKGAzWYt64V9QydZnn6Nifll3A31DA70Mzg8
      ysixPl595SXiiQhvjM8wMTkBQFP3II88fI5md/2mhr2pk1/5wPu55233UEwlGR8f44Mf+Th3
      3HEHPZ0te/dbSiQ7sCUFesvZO/j6977PJz74iwhdB8sVMxhFAyEEiUQcUKhv6eHTn/400ZVx
      fvDcq9zVqZDL5xFC0NzcwrvO3scdg20kUykgQ3PT7gW6s62Fl3/6Gj9/dhBfMLzXv6tEcg1b
      DNDSe5q3LK3y+c9/Houljl/7+Efp7uoG4MxQD3/z+b+lxeOk8/g9BJdm+cG/vgKKlQc/+AjN
      9jxPfeFRIv5TnHvPe/mnLz/OT3+o09Y7wgPvup2OjisG6O7uKn29rK1pDjramxm58wyRZ3/A
      d59+gfr6eiSSaqOYaTJceGWeF87P02AtMr0c5/c+8eH9Dklyi2MqAwgh8C95iWcNho4NYtGU
      /Q5JcotjKgNIJLVGjgRLDjU1NYAQAsMwdr1P1/WqxlEsFquqXc1KtdqxVxMz6h/KGuAgZ33V
      jL3az8WM+ofSABLJBqY0QDlpkkSyF5jSAKpqyrAktyCypEkONZbdb9mZfCbB3KUl3M3tuCxF
      llfX6R0cIrq6RDInGBroJpES5NJR2ru7y3abTIEktaIiAyx5F+kfOcHs+AUimsap0WEmpmZR
      NCvdbpWlUIRUMIrd46GTUit947/roShK6b58vnRts1US5rZUq0einN9vL97jIGqbUb8iA/QN
      DjA/P0cqk8ftqrtccA1UVUHTVIyCQTwWo7OldTO4csYCDMMg8cyzxB57DAyB+0MP0/Ce91QS
      6jX6ilKdaRblmvxmqWbs1dQ2q35FBhCGgRAGvf392EWW8ckZevqHiAQWWFzXGR5qw+1sJJMI
      UjDasaoqQohdG7mFZJL4/3sMkUwCEH/8KzTcey+a211JuFfiFgJN03a/8SZRVbWqBqtW7NV+
      LmbUr8gAVmcDo6Ojm9dtXUcBaHJd+V67HWh1bQZYDqqiIK4e1SsaINsFkipgyl4gxenE88sP
      oVitYLXieuCXUD2e/Q5LcgtS09mgG7nxbilQPp/HarVSDIWI/fMTFJaWcZw6iedXfxWlzCWb
      10PXdSyWiiq/HSkWi1VNgaoZezW1zapfvWgqYKMAZc9fIPWjZwDIz82hejy43/++/Q1Ockth
      yhRoo1Iq+P1bvq/7/NvdLpHcNKY2QN29b0NxOABQ7Hbq7r9vP8OS3IKYsg1wdS5X8PnJzcxg
      HzqGtadnT+KQbYDaa5tV35RtgKs9ae3uwnp5FwmJZK8xdQokkVQbUxpAToeW1ApTljRZA0hq
      hTSA5FBjSgPIFEhSKyoqaaKoc2l+jlA0QS6TZHbuIoWiQSQUYGElQFHPkUrliEUiFG/gU13W
      AJJaUVE36PryHNamXpa9s1hUhaGhPmZn59H1Aq11CoGwQjaeI1PIcbqpqeyCLQ0gqRWVTYeu
      c7G4NI+iWkET2B116LkMVmcdHpeV5VSWxZlpTtz9NoQQm5tG7bYgRghR1c2xDMOomr5hGFU1
      cLVjP6jP/Wb1KxoJDvkW8UdTFHSD1gYr8VSWls6jhP0L5HXB0Eg/sZggEVnh2InSEUhlLYgp
      FLBaK5/1uRNyJLj22mbVN+VUiHw+j60K64A3kAaovbZZ9U3Z3SJ7gSS1wpQlTTaCJbXClAaQ
      SGqFKQ1Qza0zJJKrMaUBZAokqRWmNIBEUitMaQCZAklqhelWhOUvXSL29I+wt7fT8AvvQb28
      JlgiqQamMoC+Hib4R3+CkUqRAfRAgObf+e39DktyC2OqFKjg9WKkUpvX2bHxfYxGchgwlQGs
      A/2oDQ2b147bzuxfMJJDgenmAuUXFoj/6Bls7e00/JufR7Xb9zwOOReo9tpm1TedAcCcD6pc
      pAEOln5F0SRjYVYCawTWIvR3NZFI52jq6CFyeTr08PGB0nToqJ+RkyflEUkS01FxDZCOruKL
      QzYR4tSJES5cmMTirKOvycpyCpYmpjlxz710tzRsLojZ7dOx2p8UhmFUbcZpNbWrrX+QY79Z
      /cpKmRBcXFzlxJnbmBwLksumsTrqKOTzxBIFGlzN9A8fJxRYobt1FE3TykqBANNVleUiU6CD
      pV/ZEUkIenr70BQYGRpgYSXI0NAgycgaiZzgSFMj2TowCin0osBSpjllCiSpFaZsBGdmZsg8
      9zxaSwuuX/y3qE7nnsYha4Daa5tV31QjwQB6KEToz/4ckU6XroNBWj71u/scleRWxVQDYQD5
      hcXNwg+Qm5zcx2gktzqmM4B9cADV7dq8dtx++z5GI7nVMWcbYGGB3I9fQmttoeGd79jzk+Jl
      G6D22mbVN6UB5LYoOyMNsLf6pkuBQC6IkdQOaQDJocaUBpADYZJaYUoDyBpAUitMNxAGJQMY
      2SyJ73wXPRCg/h3vwHH61H6HJbkFMaUBDMMg/uWvkHzySQDSL/2Ezj/9Y6xHjuxzZJJbDdOm
      QLnp6c1rkc+Tv+Tdv4AktywV1QCGnmd6ehZXcxt2kWM1HKO7d5BIYIF0XjAydJRYEjKJNXr6
      B8p2m6IoOO88S8HrBUCtr8d+fKSSUCWSbanIAIFLs2QVKw1CsBqOcerECGPj02h2B32tGktr
      UVYvLtM9dAyVK6en7Db2pus6DQ+eQ21rQw8EqLv3bSjNzRSLxUrC3cQwjD3T2k67mlQ79mpp
      m1W/IgOoikL30X5WL02hqmpptdflr8WigaZpuNwuctkscKV3Z7eRYE3T0CwWXO98RyXh7Ui5
      i3JuVltRlKr1ZFU79mqu2DKjfkUG6BgYZmZmFndTK011GpPT8/QPjRBdXWI1JTjW30jC6SGf
      DlMwwKqWCsVuhaOaBejq96iWbrXjP6ja+62fev55Yv/0NRSng+ZPfhL76HHzzwUSQpAbH0df
      DeI8ewdaU9MWveL6OgjQWlvKfrhyLlDttfdbvxiJ4vvMv0cUCgBYOjvo+svPmbMb9GqDJL77
      PaL/8CgIgdbSQuef/BGax4MQgvhXv0bs698AwP3gOTwP/6ocRJNsi5FOIa46QbIYj4MQ5uwG
      vZrU88/D5UqquL5OdnwCACORIP6tb4Oug66T+Na3MRKJ/QxVYmIs3d0477m7dKGA+4EHQFXN
      WQNc3ZNi7emhsDEGoGlYu7oAUDQNxWJB5HKln1ksKJpW40glBwVFUWj9zL8jf/ESisOOtacH
      RVHMaYCrU6Cmj30U1WajsLpKw7vfjbW/DwClro7Gj3+U6KOPAdD4kV9Hqavbl3glBwNF07AP
      D2393o6NYCF46ptf5aJ/jZaekzz8S++qOIByGsHCMMguLWNr9ICqUozFsHZ1bfvpLoQopUBQ
      qgFkI9i02mbVv87dAu9anOFjx5hZWKwwtPIQhQKh//E/ybz2WmkZpKIgcjnsp07S9vv/8ZqN
      chVFgSqeKC+59bmuXY4fH2W4t4Mse7svz07kpqfJvPoqwJXcHsiNjZM9f566u++uSRySw8OO
      ucirLz7D448/zpM/fI6sXpsFKop95+OQrvczieRm2b4GEIKh03fxmU930ODy4Khr2Pa2vcZ2
      bBD3g+dIPPl9tKYmFE1DD61R/6534Th1siYxSA4XO9YAwbU1UtE1nnn2efxrkZoEo6gqnkc+
      TOdf/2/qf+5+irEolvYOGn7+3ZuNYGEY5JeWKMZiNYlJcmuzvQEUhaHBAV586RV6u1v4yU9f
      r1lAiqKgLy0R++rXMBJJCouLRP7+i0BpXcDan/13Av/pD/B95j+QfvmVmsUluTW57kiwgsFq
      KMrC9Os8//IbtYoJI5naHP0FNkd4sxOTZM9fAFFqJMeeeKJmMUluTa7TC6TwkY99gmX/Gne9
      7efoO9J5zR1GMcvkxBzulnaa6jQWfUEGhkaIBpdJ5ATHejtIZgT5TJzm9o6y513YRo9jP3mC
      3MQkWCy4z50rRfSmM4P3etdoyeHjuuMAX/rSl2jr7iaetfCpj3/4mjsykQDhrKC/qZGLc9Oc
      HB1icmYaVI2uBoWlUJR8LEVRs9DWoey6EGYDxWql/Q//kPyCF83lwshkKUaj2EeGcZ87R+Kp
      p7C0ttD00Y/e7O8tkQC71AB33nMfenIdh+Ha9o66lj7ua9R548IYNpsNVbMgijqa1YbNppHP
      FVheWGLwtjOXF8mUjkjabdVUoVAAqxW1u5vQ5/6S/Ng4WK00/d6naPjQwzQ8/CugKKAo6FfN
      8CsXwzBu6nXlaldzhnm1Y6+Wtln1r1sDTE7P8lsf/3W+8OhXtr0jFQ+z7F+jrqERjwPGJ6bo
      6h0k7PdycRVGhntx28+SigcoGC1Yb/CIpMz4RKnwAxQKJL/xDVz333dDv+B2yKkQtdc2q/51
      a4DBThf/8OhjjJy+Z9s7GjwtjHpaNq+7jpa+tjae3vye0wl0eABu+JPxzTm+6ixvspseCpF+
      +RUsHR0477gdpYrL8CQHm+vWAOGU4CMf+zhajReZFItFLBYLtqFjuH/5IRLfe7KU83/iY7u/
      Nhol8F/+K0Y0CoDnkQ/jeejBaocsOaBctwZwkuILX3yU4dEzvPNttTuoQrs86KWoKp4PfRDP
      hz6IHgjA5dmk10svshOTm4UfIP3jF/fEALm5edb/z19jRKO4z30A17kPyNVntwDXTZgi8RSW
      hnYuzkzU1AAbNQAAQrD2539B9vXSOIT91Ena//A/77j4xXFiFNXjwbg8Ulx371v3JKb1v/or
      9NUgANEvP4599Dj248f3RFuyf1y/xSAEq4vz9A7X9pgi7arCbSQSZMfGNq9zU9MUI1EsrS3b
      vRStqYnOP/pvpF9+GUtHO86zZ/ckJrWu/sqFoqCU2R6RmJsdDeD3TmHYXLzvwXPcNnK0ljFt
      Qa2rw9LRgb7iA8DS0oLquv7kPEtbK+5fev+extH0W7+5mQK5zn0A69GePdWX7A87rgj7u//7
      eX7jk5/k77/4KL/7m5/Yk3y33G1Rcrkc9qsWvxR8PmJP/AsYAvdDD2KrsPDJbtDaa5tVf0cD
      /OT5H7DgXyedzjBw4nbe+dbK06ByDWDGB1Uu0gAHS9+UG2OZ8UGVy40YQAhB6tnnSL/4Irb+
      /tK+Rrss8ZQG2Fv9He9+9cUfcX56AYDuY6d479trtxxxSy9QjRC6Tvyb3yI3OYXz7O00vPe9
      VR9Ay42PE/7rvwEg+8Z5UBQaH7l2zpWkeuxYyvqHTtDYUdqCxNngqVlAsLUXqFYkvv8Usa/8
      IwDZ8+dRG1zU/9z9VX3P/MLCda8l1WfHj7h0Ksnaqp8n/vExfvDCz2oZ075QeFPhi3/9G1u2
      0qsGzrNnt0zxrr/v3qq+n+RadqwBgstefjZ2iV946BF6u69dC1BN9iMFct51F6lnn9u8LgQC
      iFwepYpxWLu66PzTPybz2uvY+vqwnzxRtfeSbM+Of92OowPc42gkn4wSXLfT6N6+7z0dXcOf
      MGirV1jyhza3R0/kBEP9nSRSkM9Eae3sKntBjKZpCF0n7/WieTxora1Vn3bgPHsH9tFRclNT
      m9eKs/o7UVi7uja3e5TUnh0NMDc5xZk7z/C//vYfGT39FkYGrh0ME8LAuxKgqNhYiBU4NTrE
      xNQ0imahy6WytBYlG06gOJ20b75m9xNiRD5P8C8+R25yEiwaLZ/6FHV7nI9fE4Oq0vYHv0/6
      pZ+AxULdW+8pbcx1g51kG/dXs3PtoGqbUX9HAyz5Vjhz7/38xq8/zPe+/8y296zMjRPP6MSi
      Ybq6WlEUDWEYqFYVq9WCnisSXF2ld3QUKC1YKOcIoezkVKnwA+hFYl//Bo49zI8Nw9i+RrHZ
      cL7j7QAISjtQ3Iw2VO8giB1jN7m2WfV3NMBDDz3A1/75CYoC3vfA9rMpe4bP0GPoeJcDOLUi
      45NTHOk/Rtjv5VKwwMjwUdzO28nEVykYbVgv94/vNg5gcbtKK74uu1lzu/a0Z0gIUdWepmoO
      hFUz9mo/FzPqm3MgrFAg9e3vkPju9xAeN/Zfe4SmU6ewXj41plLMMhB2M8iBsL3VN6UBNuYC
      pZIJfvbCc+SyWaw2O3fe/3Zc7srHJKQBaq9tVn1TrhXcqMZ8C97NEyYL+Rwr3kv7GZbkFsSU
      BtjA9qbt0N98LZFUiilPiNnoSTnSP0giFiMUXKW5tY3ewaFdXimR3BimNMBGG8FisXD6zupO
      whNCbHZ3KlXM3SXmxJQGqBVCCFYWLjE3OY6iKBw//RY6jvRIExwiTNkGKGewbC8o5HPMjF2g
      kM+Tz+WYuvAGRrFYk/eWmANTGqCcneP2AsMQCHHFbMIoVn2oXmIuTGmAWmF3OOgdHNocnR4Y
      GUWr8SxUyf5iyoGwfD6PbY9Gfbfj6gETIQTZTBpFUbA7nBXn/3Ig7GDpm/LjrlYpEJQmrTmv
      3vNHcqgwZQok83BJrajIAMVCjvm5WdajCQrZNPMXveiGIBYOsuwPYhTzpNN5ErEoxTILtRCC
      QqEge2MkNaGiFMgwBEf7+hm7MI7NojA42MfM7DyFfI4WJwTCgmw8Tyqb5sypxt0XwgjBzNh5
      VhYuYbM7OHX2LppaWisJ8RoS8Rj+pUUaXG46e47WNN2SmI+KDGC12bk0NwkWO2gGzrp69OwC
      Nmc9TR4rS6ksS1NTnHzrfWWdEBOLhFm8OAdAJp1iZuw8d97/jkpC3MS/tIB/aZFkPEbxcu2S
      SiYYGBndE/0N5AkxB0u/IgMkYuvkDA0FHZfdwvj4JC2dPYQDC0wnBEPHB6h/y11E/Zdoazqz
      6wkxb+45EcLYk16DWCTC9IU3rimY68FVhk+e3uFVN4fsBTpY+hVF42psZbTx2hTlSMeVnZvd
      DUBP6Xq3T8bG5hY6unsI+ldQVJXB43tzOnwmldz2vfc6vZIcPEyVAKuqSt/QcMnFQrAW8O3J
      tIjmtjacdVe2M29p72DoxCmGTpyqWFtysDHdOMD85HjplEjAt7hAR3cPrR2V7Utkszu4++3v
      Zn1tFWddPS5PY833HZKYE9OVgjd/4u/VxDi7w0H30dJWj9VsiEkOFqZKgQAGR09is9lRFIXW
      ji5a2jv2OyTJLYwp5wJlMxmEYeCoq6tKb4pcFF97bbPqmy4FArBYrTJHl9QE05UywyhycXqS
      8FqQ5tY2jp04tS/bpUsOB6YzgG9xkYW5GQASsSg2h4P+oZGyXqsXCkTD69idThpcbrm0UbIr
      pjNAOpXccp1JJne4cyuFQoGf/uuzJOMxFEXhxFvOcqSvvwoRSm4lTNcL1HmkB4uldE6Wpml0
      Hu0t63WRtSDJeOlwbCEES5fmqxaj5NbBdDWAu7GJu97+TpKxGO7GJupdrrJeZ3c6t2yo65AH
      WUvKwHQGAEqjtVftAZqIRfEvLeKoq+NI38C2jWJ3YxPHT93Gsvcizvp6jp+5rZYhSw4opjTA
      1UMT2Uyan73wPIVCHoB0MsnobdeeWawoCr3Hhug9JnePk5RPRQbIJqN4lwPkCoLmeguxVIaW
      zqOEAwvkC4Lh4wPEYoJkLMDQ6GhZDQ6jWMS3uEA2k6LzyFFy2exm4QdYX1utJGSJZAsVGcDR
      0MiRTp2LyyFimTynTp3gwoVJLM56hjusrIRiLE3MMnrX3aiw64IYgIvTk5vdoCsLXrre1Aiu
      d7krnstT7UUlckHMwdGvyACZ2BoXfTHOnDrOxNgY+VwWi91BsaCTTBWpr2+k/9gQ4eAqR9o8
      pcPvdpkKEV4Lbv67qOsEfb4tP7fbHRWPEsupELXXNqt+ZYviDbCpRbxLPoYG+1hYXmVoeIju
      tkayFjddzU10dnfS19WMXizvU7G5rX3z35rFwvEzt2GxWjev31wjSCSVYLrJcMVikYW5GRKx
      GH3HhmhsaSWTShGLhnE3NlFXv/1xrTeCrAFqr21WfdP1AiViUVYWLpHL5VBUBXdjE876epz1
      cvMqyd5jupHg+cnxzenQqyvLhIKB/Q5JcgtjKgPoeoFUIrHle/NTk3KTLEnVMJUBouvr5HLZ
      Ld9LxmOkkokdXiGRVIapDOBwbr87c2B5iVXfMoV8HiEEsUh481oiqQRT9QIJIfDOzjA3Obbt
      z+saGug+2sf81ARCCOobXNz99nddc4C2EILVlWUi62s0t7XT3nVki7Gq2RuRy2WZHb9ALBKh
      vaubY6Mn93T7RdkLtLf6pqoBirpOYGVpx5+nk8nNwg+lrQ3DobVr7lv1LXPhZy+z7L3E+Vd+
      wlrAd8091WJxfg7/0iLpZALv7DRB30rN3lty45jKANHw+uac/u1QFIX6BteWa+c2054jbzJF
      JBTauyB3IZtObbnOvOlaYi5MNQ7gcJZ2gXhzVtbg9qAoCj19A7R2djIzdp50KkVP/wCuxsZr
      dJrb2lneOFVeUWhua6tF+AB09/YTDPgxikVsdjsdR47W7L0lN47p2gD+pUUW5mex2mwU8nma
      W9sYOnkKTSvfq+LytoqRUIjmtjZaO7pq1gYoFotkM2lSiTiephbsDsee6ss2wN7qm8oAGxQK
      BayX5/9UAzkVovbaZtU3VRtgA7mbg6RWVHxE0thrr5LWIRRYZmxsjGgyw6W5acYmpsjlkqyt
      J1jyess+Iglqd1C2RFJRfaSoFlrc9eQFBEJRTp0YYWxiBtVq42iTlaW1KOuLftqO9qJyZbFI
      OUclFas4/aGa+tU2bzVjP8jP/Wb1KzKAqmlo6ka6ogBiM30RQqAqCjardXO7842f7ZbiVDOH
      3qBa+oqiHNjYq61tRv2KDJBLJwhEEliMRY50NDM+NUffsWEigUV8CYPhgUY8Tg+51DoFA6yX
      zbJbI1jX9aoeXmcYRtX0hRBVNUE1Y6+mtln1ZS/QHiN7gQ6WvuwFkhxqTGkA2QskqRWmNICs
      ASS1QhpAcqgxpQFkCiSpFaY0gKwBJLVCGkByqDGlAWQKJKkVpjSArAEktWLvh+WEYH52inRe
      MDJ0lFgSMokQPf39ZbtNGkBSK/a8BjD0PDlhoa/VwdJalLmJMQxbPdoNFGqZAklqxd6nQMrG
      tFQDTVNpcLnIZbO7v+5qCVkDSGrEnqdAqmbD49RYTcGx/iYSzkby6TD5osBapt2kASS1Yu/b
      AIpCT9+xzctmG9BU2tm53ImnMgWS1IqabYty9dFIu63aURTFdCuHykWuCDtY+jUzgKIo2x5v
      utO91Vw4UU39jcUw1VxxVs3YD+pzv1n9mi6IkUjMhmkGwoQwCPh85HWDWDRMoSgwijrhSPSm
      NdOJGF6vl2QmTyoeZT0aBwShVT/pXIFUIko2XwQMQqHwDWknk0kMQ2DoeVZ8AQwhyCTjrIVL
      8YaCftLZAulEjEy+dHJhKBSinE8bIQSJy+ckhNdW8XoX0Q3B+lqAVCaPMHRWVnwYAtbX1xFA
      Mh4lm9/9hERhFPEtL5HJFdDzGXyBNQSQiIWJxJKljYX9PnKFIvFYhLxuIIwi6+FIWc8ln02z
      vOLHEIJgYIXFpZXSv/0+sgWdYiGHz7+KuCr2XDpBIp0r58GwtuonFIkBglX/CrlCkaKeZ8Uf
      QAhBMh4hHE1QLOSIxJMARNbXd9yVRPvsZz/72bJ+syqzPD+NVu9hwbtAIuQjhwM9scaY109/
      T9dNac5fvEhPby92zWBybolCMkwmkyYj7PiWFtCTcYLJHPVk+fEbMwwPlHcAXyGb4vXz47R1
      dDE3PUlzYz2L/jCrfj9k4yRTKVLCgX/JSz6XIBRO47bmePanM4wc62W35Ci6HmTau8yRznYu
      eRfo7eulEA/gT6oEV7zE1kM0NTfiXQ4Q9I6jNR5heeIlktZWWt3X34kuHg1jr3MxOzPLeiiE
      u05jNZxgNRghHV0jlUqAw8XSgpdUdJV0XkPJRXhteonB3iO7Ppv19XXqLEW8qzFS8RS9vT2E
      fV5ylnqWF7ysh9bwNFjxR3PMXXiF1p4BlmfOs5bV6GxxX1/c0MkVFXyL82RSSRSHm0XvJcKh
      IE1uJ8uBMIHVMLn4OpqS4/W5VfqPtPHMUz+g+9gwNu3az3vT1ACxXJGO1mZUDOwNTeRTUSJp
      nZYG2+4v3oGWRjeX5qbxXlrE7mqkxd2Abz1CW2srVouK0ByoRo5AOEl3m6dsXaujnu7OVgCE
      otLU0omeDWK1uulobeDicoTOjhbsmoZQrKiKzlIwwdGua/cx3Y6m1g48DU4A6p02JsfeYHF5
      nfauTqxWDR2NpqZmRD6Lp72HqH8Ri8O1i2oJt6eRZe8cnUd60CxWWlrbiYd91Dc00+K2sxLK
      0tHegkUBq9ONnksQiudoa7x2E+LtcNU5mF8K0d/dgcOmMnbhAuuxDG2trVg0QLXQ2tFOLhan
      s7uztHu2ZkMtp8mkWdHTUWKpAtlcjtbmZjQNUDSa27opRBaxulpocTlJZHU8ToHt+6kAAAIn
      SURBVCu+5UU8HTvvz2oaA3R46hifnEK1OQEFp1pA18p76DtR0HWsFg3F4SIb9rO4FmWop5v5
      2Sl0oaICzS4HkbSO5QaeRC6TxOfzs+ILYLeoTE+NUe/pR8+vM7sY5vRIN7OT0+SEggK0uuyE
      M0UsZTaMI6EgAb+ftUgUvSjQFGju6uTi5Bj5okK9XWV6ehq7qxFF1VCNJN093WVpz4+/QV5z
      oiBQhc70zCwd3UPEw8ssr2cYOephcmIKYbED4LIKMth2rbU2ePXVV/E0uslmMwhFQVWgqdnD
      7NQkhmLDphpMjs/gbm9Fs9UTW12gqb28Gl7PpYmn89TbLNS7XMzMTIFqx6bB9OQYDd0nyEeW
      WQonaayz0nGkm8mZRToanTtqmqYRLISgqOtoFktpaxFg4/8323NgGAbFooHFoiEMAwOwaOrl
      bVcsbOxjtPEIyn2fjRPJFUXBYrGg68XSewgDQ4BF09D1wpb3MC7/Toqq7lqYirpO0TBQNQ0F
      gRBKKe5iEVXVUJSNHRCsCGFcfg8VAai7mMwoFjd1NE1BLxpYLJbL57ApqKpCUddRLRYQAkUB
      Icr/O+h6AcMQaBYLGAYoCpp6+ZlbLCgIdL30nltiF6DuUg1slBFUFU1TKRY2NLnyN7j8dy7t
      V6VgGMZ1e+ZMYwCJZD8wTQokkewH0gCSQ400gElZWZhnbHIa3bh+hmoUc0xMzG5ep+NRktkC
      3pkLRNPyfOXd+P+edCeFks9MxAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='D6' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      5h5K0AQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
